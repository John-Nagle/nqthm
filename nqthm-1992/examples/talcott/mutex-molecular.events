#|

 Copyright (C) 1994 by Misao Nagayama and Carolyn Talcott.  All Rights Reserved.

 You may copy and distribute verbatim copies of this Nqthm-1992 event script as
 you receive it, in any medium, including embedding it verbatim in derivative
 works, provided that you conspicuously and appropriately publish on each copy
 a valid copyright notice "Copyright (C) 1994 by Misao Nagayama and Carolyn
 Talcott.  All Rights Reserved."

 NO WARRANTY

 Misao Nagayama and Carolyn Talcott PROVIDE ABSOLUTELY NO WARRANTY.  THE EVENT
 SCRIPT IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR
 IMPLIED, INCLUDING, BUT NOT LIMITED TO, ANY IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO
 THE QUALITY AND PERFORMANCE OF THE SCRIPT IS WITH YOU.  SHOULD THE SCRIPT
 PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR
 CORRECTION.

 IN NO EVENT WILL Misao Nagayama or Carolyn Talcott BE LIABLE TO YOU FOR ANY
 DAMAGES, ANY LOST PROFITS, LOST MONIES, OR OTHER SPECIAL, INCIDENTAL OR
 CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THIS SCRIPT
 (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE
 OR LOSSES SUSTAINED BY THIRD PARTIES), EVEN IF YOU HAVE ADVISED US OF THE
 POSSIBILITY OF SUCH DAMAGES, OR FOR ANY CLAIM BY ANY OTHER PARTY.

|#

(boot-strap nqthm)

;;;;;;;;;;;;;;;;;;;;;;;;   mutex-molecular.ev    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;   com.ev   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;*sequence and finite set utilities

;;;The ith entry in l.
(defn nth (l i)
      (if (listp l)
          (if (equal i 1) (car l) (nth (cdr l) (sub1 i)))
          (if (numberp l) 
              (if (equal i 1) l F) F)))
(disable nth)

;;;update ith entry of l to be k
(defn move (l i k)
       (if (equal i 0) l
           (if (nlistp l)
               (if (equal i 1) k l)
               (if (equal i 1)
                   (cons k (cdr l))
                   (cons (car l) 
                         (move (cdr l) (sub1 i) k))))))
(disable move)

(defn at (l i k)
     (equal (nth l i) k))
(disable at)

(defn length (l)
      (if (listp l) (add1 (length (cdr l))) (zero)))
(disable length)

;;;The nth entry in l is in the list i.
(defn union-at-n (l n i)
     (member (nth l n) i))
(disable union-at-n)

;;;Any entry in l is in the list i.
(defn all-union (l n i)
     (if (zerop n) T
         (and (union-at-n l n i)
              (all-union l (sub1 n) i))))
(disable all-union)

;;;There exists an entry in l which belongs to 
;;;the list i, moreover when exists, some such
;;;j is returned.
(defn exist-union (l n i)                         
      (if (zerop n) F
          (if (union-at-n l n i) n
              (exist-union l (sub1 n) i))))
(disable exist-union)

;;;n is in the intersection of l8-12 and g34.
(defn intersect-8-12-3-4-at-n (n l g)
    (and (union-at-n l n '(8 9 10 11 12))
         (union-at-n g n '(3 4))))

(disable intersect-8-12-3-4-at-n)

;;;There exists n in the intersection of l8-12 and g34.
(defn exist-intersect-8-12-3-4 (n l g)
   (if (zerop n) F
       (if (intersect-8-12-3-4-at-n n l g) n
           (exist-intersect-8-12-3-4 (sub1 n) l g))))
(disable  exist-intersect-8-12-3-4)

;*Flag invariant.

(defn lg-1-at-n (n l g)
   (or (and (at l n 0) (at g n 0))
       (and (at l n 1) (at g n 0))
       (and (at l n 2) (at g n 0))
       (and (at l n 3) (at g n 1))
       (and (at l n 4) (at g n 1))))

(disable lg-1-at-n)

(defn lg-2-at-n (n l g)
   (or (and (at l n 5) (at g n 3))
       (and (at l n 6) (at g n 3))
       (and (at l n 7) (at g n 2))
       (and (at l n 8) (at g n 3))
       (and (at l n 8) (at g n 2))))     
(disable lg-2-at-n)       

(defn lg-3-at-n (n l g)
   (or (and (at l n 9) (at g n 4))
       (and (at l n 10) (at g n 4))
       (and (at l n 11) (at g n 4))
       (and (at l n 12) (at g n 4))))
(disable lg-3-at-n)

(defn lg-at-n (n l g)      
    (and (lg-1-at-n n l g)
         (lg-2-at-n n l g)
         (lg-3-at-n n l g)))
(disable lg-at-n)

(defn lg (n l g)
     (if (zerop n) T
         (and (lg-at-n n l g)
              (lg (sub1 n) l g))))
(disable lg)


;*The set {1...n}.
(defn nset (n)                                                    
     (if (zerop n) NIL
         (cons n (nset (sub1 n)))))
(disable nset)

;;;n belongs to nset.
(prove-lemma n-in-nset (rewrite)
   (implies (not (zerop n))
            (member n (nset n)))
   ((enable nset)))

;;;Any element in nset is a number.
(prove-lemma nset-number (rewrite)
   (implies (member k (nset n))
            (numberp k))
   ((enable nset)))

;;;If a nonzero number plus one belongs to nset, 
;;;then so does the nonzero number itself.
(prove-lemma add1-nset (rewrite)
   (implies (and (not (zerop k))
                 (member (add1 k) (nset n)))
            (member k (nset n)))
   ((enable nset)))                 

;;;Any list has its length at least nonzero.
(prove-lemma list-ln (rewrite)   
   (implies (listp l)
            (not (equal (length l) 0)))
   ((enable length)))

;;;(move l k i) is again a list if l is a list.
(prove-lemma move-is-list (rewrite)
   (implies (listp l)
            (listp (move l k i)))
   ((enable move)))

(enable length)

;;;(move l k i) has i as its kth entry.
;;;(enable length) is critical to prove this lemma.
(prove-lemma move-nth (rewrite)
   (implies (and (listp l)
                 (member k (nset (length l))))
            (equal (nth (move l k i) k) i))
   ((enable nth move nset)))

(prove-lemma zero-not-member-nset (rewrite)
   (not (member 0 (nset n)))
   ((enable nset)))

;;;Lists l and (move l k i) have the same length.
(prove-lemma move-unchange-length (rewrite)
   (implies (and (listp l)
                 (member k (nset (length l))))
            (equal (length (move l k i)) (length l)))
   ((enable move nset)))

;;;Lists l and (move l k i) have the same entries 
;;;except kth one.
(prove-lemma move-unchange-other-than-nth (rewrite)
   (implies (and (listp l)
                 (member k (nset (length l)))
                 (not (equal j k)))
            (equal (nth (move l k i) j) (nth l j)))
  ((enable move nth nset)))

(prove-lemma member-ex-union (rewrite)
   (implies (exist-union l n i)
            (member (exist-union l n i) (nset n)))
   ((enable nset exist-union)))

;;;(exist-union l n i) is a number.
(prove-lemma number-ex-union (rewrite)
   (implies (exist-union l n i)
        (numberp (exist-union l n i)))
   ((enable exist-union)))

;;;(exist-intersect-8-12-3-4 n l g) belongs to nset.
(prove-lemma member-intersect (rewrite)
   (implies (exist-intersect-8-12-3-4 n l g)
            (member (exist-intersect-8-12-3-4 n l g) (nset n)))
   ((enable nset exist-intersect-8-12-3-4 
            intersect-8-12-3-4-at-n )))

;;;(exist-intersect-8-12-3-4 n l g) is a number.
(prove-lemma number-intersect (rewrite)
   (implies (exist-intersect-8-12-3-4 n l g)
            (numberp (exist-intersect-8-12-3-4 n l g)))
   ((enable exist-intersect-8-12-3-4)))

;;;any member of nset is nonzero.
(prove-lemma k-not-0 (rewrite)
   (implies (member k (nset n))
            (not (zerop  k)))
   ((enable nset)))

;*lemmas for a0 

;;;If j's entry in l is between 8..12 then  
;;;(exist-union l n '(8 9 10 11 12)) holds.
(prove-lemma j-ex-l8-12 (rewrite)
   (implies (and (member j (nset n))
                 (union-at-n l j '(8 9 10 11 12)))
            (exist-union l n '(8 9 10 11 12)))
   ((enable nset exist-union union-at-n at)))

;;;Witness of (exist-union lp n '(8 9 10 11 12)) 
;;;has in lp its entry between 8...12.
(prove-lemma ex-lp8-12-in-lp8-12 (rewrite)
   (implies (exist-union lp n '(8 9 10 11 12))
            (union-at-n lp (exist-union lp n 
             '(8 9 10 11 12)) '(8 9 10 11 12)))
   ((enable exist-union union-at-n at)))

;;;If (not (exist-union l n '(8 9 10 11 12))) 
;;;holds, then (not (exist-union g n '(4))) by lg.
(prove-lemma ex-if4 (rewrite)
   (implies (and (not (exist-union l n '(8 9 10 11 12)))
                 (lg n l g))
            (not (exist-union g n '(4))))
   ((enable exist-union union-at-n lg 
            lg-at-n lg-2-at-n at)))

;;;If (not (exist-union g n '(1))) holds,
;;; then there is no entry either 3 or 4.
(prove-lemma l34-empty (rewrite)
   (implies (and (member j (nset n))
                 (lg n l g)
                 (not (exist-union g n '(1))))
            (not (union-at-n l j '(3 4))))
   ((enable at nset exist-union union-at-n lg 
            lg-at-n lg-1-at-n)))

;;;If j's entry in lp is 4, then (certainly)
;;;it is either 3 or 4.
(prove-lemma lp4-then-un34 (rewrite)
   (implies  (at lp j 4)
             (union-at-n lp j '(3 4)))
   ((enable union-at-n at)))

;;;If (exist-intersect-8-12-3-4 n l g) holds, 
;;;then so does (exist-union g n '(3 4)).
(prove-lemma int-8-12-3-4-then-un34 (rewrite)
   (implies (exist-intersect-8-12-3-4 n l g) 
            (exist-union g n '(3 4)))
   ((enable exist-intersect-8-12-3-4 
            intersect-8-12-3-4-at-n  
            union-at-n exist-union at)))

;*lemmas for a1

;;;i is the witness of 
;;;(exist-intersect-8-12-3-4 n lp gp).
(prove-lemma int-wtn (rewrite)  
   (implies (and (member j (nset n))
                 (intersect-8-12-3-4-at-n j lp gp))
            (exist-intersect-8-12-3-4 n lp gp))
   ((enable nset exist-intersect-8-12-3-4)))

;;;If there exists j such that j's entry in lp 
;;;is between 8..12 and entry in gp is either 3 or 4
;;;then (intersect-8-12-3-4-at-n j lp gp) holds.
(prove-lemma un8-12-and-un34-then-int (rewrite)
   (implies (and (union-at-n lp j '(8 9 10 11 12))
                 (union-at-n gp j '(3 4)))
            (intersect-8-12-3-4-at-n j lp gp))
   ((enable intersect-8-12-3-4-at-n)))

;;;By the two lemmas above, 
;;;(exist-intersect-8-12-3-4 n lp gp) holds provided 
;;;that there exists j such that j's entry in lp is
;;;between 8..12 and entry in gp is either 3 or 4.

;* ep-l8-12

;;;If the k's entry in l is 5, then the k's entry 
;;;in g is 3 by lg.
(prove-lemma lg-l5-g3 (rewrite)
   (implies (and (member k (nset n))
                 (lg n l g)
                 (at l k 5))
             (at g k 3))
   ((enable lg lg-at-n lg-2-at-n nset at)))

;;;If the k's entry in gp is 3 then certainly 
;;;it is either 3 or 4.
(prove-lemma gp3-then-un34 (rewrite)
   (implies (at gp k 3)
            (union-at-n gp k '(3 4)))
   ((enable union-at-n at)))

;;;nep-l8-12

;;;If the k's entry in l is between 8..12 then 
;;;it is either between 8..11 or equal to 12.
(prove-lemma case-k (rewrite)
   (implies (and (union-at-n l k '(8 9 10 11 12))
                 (not (union-at-n l k '(8 9 10 11))))
            (at l k 12))
   ((enable union-at-n at)))

;;;;;k-not-l8-12

;;;If (exist-intersect-8-12-3-4 n l g) holds
;;;then the witness has its entry in g either equal 
;;;to 3 or 4.
(prove-lemma intersect-8-12-3-4-then-3-4 (rewrite)
   (implies (exist-intersect-8-12-3-4 n l g)
            (union-at-n g 
             (exist-intersect-8-12-3-4 n l g) '(3 4)))
   ((enable exist-intersect-8-12-3-4 
            intersect-8-12-3-4-at-n
            union-at-n at)))

;;;If (exist-intersect-8-12-3-4 n l g) holds,
;;; then the witness has its entry in g between 8 and 12.
(prove-lemma intersect-8-12-3-4-then-8-12 (rewrite)
   (implies (exist-intersect-8-12-3-4 n l g)
            (union-at-n l (exist-intersect-8-12-3-4 n l g)
             '(8 9 10 11 12)))
   ((enable exist-intersect-8-12-3-4
            intersect-8-12-3-4-at-n
            union-at-n at)))

;;;k-in-l8-11

;;;If k's entry in lp is between 9 and 12,
;;;then it is certainly between 8 and 12.
(prove-lemma un9-12-then-un8-12 (rewrite)    
   (implies (union-at-n lp k '(9 10 11 12))
            (union-at-n lp k '(8 9 10 11 12)))
  ((enable union-at-n at)))

;;;If the i's entry in l is between 9 and 12,
;;;then the k's entry in g is 4.
(prove-lemma if4 (rewrite)
   (implies (and (member j (nset n))
                 (lg n l g)
                 (union-at-n l j '(9 10 11 12)))
            (at g j 4))
   ((enable nset union-at-n at lg lg-at-n lg-3-at-n)))

;;;k-in-l12

;;;If (exist-union lp n '(8 9 10 11 12)) holds then
;;;its witness does not have its entry in lp equal to 1.
(prove-lemma ex-lp8-12-not-in-lp0 (rewrite)
   (implies (exist-union lp n '(8 9 10 11 12))
            (not (at lp (exist-union lp n '(8 9 10 11 12)) 0)))
   ((enable exist-union union-at-n at)))

;;;If k's entry in lp is between 8 and 12,
;;; then it is either between 8 and 11 or 12.
(prove-lemma k-in-lp9-12-or-lp8 (rewrite)
   (implies (and (union-at-n lp k '(8 9 10 11 12))
                 (not (union-at-n lp k '(9 10 11 12))))
            (at lp k 8))
   ((enable union-at-n at)))

;;;If the k's entry is either 5 or 7,
;;;then it is between 5 and 7.
(prove-lemma un57-then-un5-12 (rewrite)
   (implies (union-at-n l k '(5 7))
            (union-at-n l k '(5 6 7 8 9 10 11 12)))
   ((enable union-at-n at)))

;;;If the k's entry in l is between 8 and 11,
;;;then it is between 5 and 12.
(prove-lemma un8-11-then-un5-12 (rewrite)
   (implies (union-at-n l k '(8 9 10 11))
            (union-at-n l k '(5 6 7 8 9 10 11 12)))
   ((enable union-at-n at)))

;;;If the k's entry in l is between 8 and 12,
;;;then it is between 5 and 12.
(prove-lemma un8-12-then-un5-12 (rewrite)
   (implies (union-at-n l k '(8 9 10 11 12))
            (union-at-n l k '(5 6 7 8 9 10 11 12)))
   ((enable union-at-n at)))


;*lemmas for a2

;;;i-eq-k-j-neq-k

;;;If the k's entry in l is either 10 or 11, 
;;;then the k's entry in l is between 10 and 12.
(prove-lemma un10-11-then-un10-12 (rewrite)
   (implies (union-at-n l k '(10 11))
            (union-at-n l k '(10 11 12)))
   ((enable union-at-n at)))

;;;If the j's entry in g is either 0 or 1 then
;;;the j's entry in l is not between 5 and 12.
(prove-lemma if1 (rewrite)
   (implies (and (member j (nset n))
                 (lg n l g)
                 (union-at-n g j '(0 1)))
             (not (union-at-n l j 
                   '(5 6 7 8 9 10 11 12))))
   ((enable nset union-at-n at lg lg-at-n 
            lg-1-at-n)))

;;;j-eq-k-i-neq-k

;;;If the k's entry in l is between 5 and 7,
;;;then it is certainly between 5 and 12.
(prove-lemma un5-7-then-un5-11 (rewrite)
   (implies (union-at-n l k '(5 6 7))
            (union-at-n l k '(5 6 7 8 9 10 11)))
   ((enable union-at-n at nset)))

;;;If the k's entry in lp is between 5 and 7 then 
;;;it is certain between 5 and 11.
(prove-lemma un57-then-un5-11 (rewrite)
   (implies (union-at-n l k '(5 7))
            (union-at-n l k '(5 6 7 8 9 10 11)))
   ((enable union-at-n at)))

;;;If the k's entry in l is between 8 and 11,
;;;then it is certainly between 5 and 11.
(prove-lemma un8-11-then-un5-11 (rewrite)
   (implies (union-at-n l k '(8 9 10 11))
            (union-at-n l k '(5 6 7 8 9 10 11)))
   ((enable union-at-n at)))

;;;If the k's entry in lp is between 5 and 12 and
;;;the k's entry in lp is between 5 and 7, then
;;;the k's entry in lp in fact is between 9 and 12.
(prove-lemma k-in-lp5-7-or-lp8-or-lp9-12 (rewrite)
   (implies (and (union-at-n lp k '(5 6 7 8 9 10 11 12))
                 (not (union-at-n lp k '(5 6 7)))
                 (not (at lp k 8)))
           (union-at-n lp k '(9 10 11 12)))
   ((enable union-at-n at)))

;;;If the k's entry in l is between 5 and 11,
;;; then it is certainly between 5 and 12.
(prove-lemma un5-11-then-un5-12 (rewrite)
   (implies (union-at-n l k '(5 6 7 8 9 10 11))
            (union-at-n l k '(5 6 7 8 9 10 11 12)))
   ((enable union-at-n at)))

;;;If the k's entry in l is between 10 and 12,
;;; then it is certainly between 8 and 12.
(prove-lemma un10-12-then-un8-12 (rewrite)
   (implies (union-at-n l i '(10 11 12))
            (union-at-n l i '(8 9 10 11 12)))
   ((enable union-at-n at)))

;;;j-eq-k-i-neq-k

;;;If (exist-union l n '(8 9 10 11 12)) does not hold,
;;;then the i's entry in l is not between 10 and 12.
(prove-lemma i-not-l10-12 (rewrite)
   (implies (and (member i (nset n))
                 (not (exist-union l n '(8 9 10 11 12))))
            (not (union-at-n l i '(10 11 12))))
   ((enable exist-union union-at-n at nset)))


;*lemmas for a3

;;;j-eq-k-i-neq-k

;;;If the k's entry in l is between 5 and 11,
;;;then the k's entry in l is between 9 and 11.
(prove-lemma un5-11-eq-un58-or-un8-11 (rewrite)
   (implies (and (union-at-n l k '(5 6 7 8 9 10 11))
                 (not (union-at-n l k '(5 6 7 8))))
            (union-at-n l k '(9 10 11)))
   ((enable union-at-n at)))

;;;If the k's entry in g is 4,
;;;then the k's entry in l is between 5 and 8.
(prove-lemma a3-if4 (rewrite)
   (implies (and (member k (nset n))
                 (lg n l g)
                 (at g k 4))
            (not (union-at-n l k '(5 6 7 8))))
   ((enable nset union-at-n at lg lg-at-n lg-3-at-n)))

;;;If the k's entry in l is between 5 and 11,
;;;and the k's entry in l is between 5 and 12,
;;;then the k's entry in l is 9 and 11.
(prove-lemma k-in-l5-11-g4-then-l9-11 (rewrite)
   (implies (and (member k (nset n))
                 (lg n l g)
                 (union-at-n l k '(5 6 7 8 9 10 11))
                 (at g k 4))
            (union-at-n l k '(9 10 11)))
   ((use (a3-if4))))

;;;If the i's entry in l is 12, 
;;;then the i's entry in l is between 8 and 12.
(prove-lemma l12-then-un8-12 (rewrite)
   (implies (at l i 12)
            (union-at-n l i '(8 9 10 11 12)))
   ((enable at union-at-n)))

;;;If (exist-union l n '(8 9 10 11 12)) does not hold,
;;;then the i's entry in l is 12.
(prove-lemma i-not-in-l12 (rewrite)
   (implies (and (member i (nset n))
                 (not (exist-union l n '(8 9 10 11 12))))
             (not (at l i 12)))
   ((enable exist-union nset at union-at-n)))

;;;j-neq-k-i-eq-k

;;;If the k's entry in l is 11,
;;; then the k's entry in l is between 10 and 12.
(prove-lemma l11-then-un10-12 (rewrite)
   (implies (at l k 11)
            (union-at-n l k '(10 11 12)))
   ((enable union-at-n at)))

;;;If the j's entry in g is either 2 or 3,
;;;then the j's entry in l is between 5 and 8 by lg.
(prove-lemma if3 (rewrite)
   (implies (and (member j (nset n))
                 (lg n l g)
                 (not (union-at-n g j '(2 3))))
            (not (union-at-n l j '(5 6 7 8))))
   ((enable union-at-n at nset lg lg-at-n lg-2-at-n)))


;;;If the j's entry in l is between 5 and 12 and
;;;the j's entry in l is between 5 and 8, then
;;;the j's entry in l is 9 and 12.
(prove-lemma l5-12-eq-l5-8-or-l9-12 (rewrite)
   (implies (and (union-at-n l j '(5 6 7 8 9 10 11 12))
                 (not (union-at-n l j '(5 6 7 8))))
            (union-at-n l j '(9 10 11 12)))
   ((enable union-at-n at)))

;;;i-j-eq-k

;;;If the k's entry in lp is 12,
;;;then it is certainly between 5 and 12.
(prove-lemma l12-then-un9-12 (rewrite)
   (implies (at lp k 12)
            (union-at-n lp k '(9 10 11 12)))
   ((enable union-at-n at)))

;*lemmas for b1a

;;;If the u's entry in g is 4,
;;;then the u's entry in l is between 8 and 12 by lg.
(prove-lemma b1a-if4 (rewrite)
   (implies (and (member u (nset n))
                 (lg n l g)
                 (at g u 4))
            (union-at-n l u '(8 9 10 11 12)))
   ((enable nset union-at-n at lg lg-at-n 
            lg-3-at-n)))

;*lemmas for b1b

;;;If the k's entry in lp is between 9 and 12,
;;;then the k's entry in gp is iether 3 or 4 by lg.
(prove-lemma lp9-12-then-k-in-g34 (rewrite)
   (implies (and (member k (nset n))
                 (union-at-n lp k '(9 10 11 12))
                 (lg n lp gp))
            (union-at-n gp k '(3 4)))
   ((enable nset at union-at-n lg lg-at-n 
            lg-3-at-n)))

;;;If the k's entry in lp is between 8 and 12, and
;;;it is not 8, then it is certainly between 9 and 12.
(prove-lemma un8-12-then-l8-or-l9-12 (rewrite)
   (implies (and (union-at-n lp k '(8 9 10 11 12))
                 (not (at lp k 8)))
            (union-at-n lp k '(9 10 11 12)))
   ((enable at union-at-n)))




;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; moldefn.ev ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;* Well-formed states

(defn molws (n l g h)                                                  
      (and (numberp n)
           (listp l)
           (listp g)
           (listp h)
           (equal (length l) n)
           (equal (length g) n)
           (equal (length h) n)
           (all-union l n '(0 1 2 3 4 5 6 7 8 9 10 11 12))
           (all-union g n '(0 1 2 3 4))
           (all-union h n (nset (add1 n)))))
(disable molws)

;* Transitions

(defn mrhoi0 (n i l g h lp gp hp)                
      (and (at l i 0)
           (equal gp g) 
           (equal lp (move l i 1))
           (equal hp h)))

(defn mrhoi1a (n i l g h lp gp hp)
      (and (at l i 1)
           (equal gp g)
           (equal lp (move l i 2))
           (equal hp h)))
(defn mrhoi1b (n i l g h lp gp hp)
      (and (at l i 1)
           (equal gp g)
           (equal lp l)
           (equal hp h)))

(defn mrhoi2 (n i l g h lp gp hp)
      (and (at l i 2)
           (equal lp (move l i 3))
           (equal gp (move g i 1))
           (equal hp (move h i 1))))

(defn mrhoi3a (n i l g h lp gp hp)
       (and (at l i 3)
            (equal gp g)
            (equal hp h)
            (at h i (add1 n))
            (equal lp (move l i 4))))

(defn mrhoi3b (n i l g h lp gp hp)
       (and (at l i 3)
            (equal gp g)
            (equal lp l)
            (lessp (nth h i) (add1 n))
            (equal hp (move h i (add1 (nth h i))))
            (union-at-n g (nth h i) '(0 1 2))))

(defn mrhoi4 (n i l g h lp gp hp)
      (and (at l i 4)
           (equal gp (move g i 3))
           (equal lp (move l i 5))
           (equal hp (move h i 1))))

(defn mrhoi5a (n i l g h lp gp hp)
      (and (at l i 5)
           (equal gp g)  
           (equal hp h)  
           (at h i (add1 n))
           (equal lp (move l i 8))))

(defn mrhoi5b (n i l g h lp gp hp)
      (and (at l i 5)
           (equal gp g)  
           (equal hp h)  
           (lessp (nth h i) (add1 n))
           (at g (nth h i) 1)
           (equal lp (move l i 6))))

(defn mrhoi5c (n i l g h lp gp hp)
      (and (at l i 5)
           (equal gp g)  
           (equal lp l)  
           (lessp (nth h i) (add1 n))
           (not (at g (nth h i) 1))
           (equal hp (move h i (add1 (nth h i))))))

(defn mrhoi6 (n i l g h lp gp hp)
      (and (at l i 6)
           (equal gp (move g i 2))
           (equal lp (move l i 7))
           (equal hp (move h i 1))))

(defn mrhoi7a (n i l g h lp gp hp) 
      (and (at l i 7)
           (equal lp (move l i 8))
           (at g (nth h i) 4)
           (equal gp g)
           (equal hp h)))

(defn mrhoi7b (n i l g h lp gp hp) 
      (and (at l i 7)
           (not (at g (nth h i) 4))
           (equal lp l)
           (equal gp g)
           (equal hp (move h i 
                      (add1 (remainder (sub1 (nth h i)) n))))))

(defn mrhoi8 (n i l g h lp gp hp)
      (and (at l i 8)
           (equal gp (move g i 4))
           (equal lp (move l i 9))
           (equal hp (move h i 1))))

(defn mrhoi9a (n i l g h lp gp hp)
      (and (at l i 9)
           (at h i i)
           (equal lp (move l i 10))
           (equal gp g)
           (equal hp h)))

(defn mrhoi9b (n i l g h lp gp hp)
      (and (at l i 9)
           (lessp (nth h i) i)
           (union-at-n g (nth h i) '(0 1))
           (equal hp (move h i (add1 (nth h i))))
           (equal gp g)
           (equal lp l)))

(defn mrhoi10 (n i l g h lp gp hp)
      (and (at l i 10)
           (equal lp (move l i 11))
           (equal gp g)
           (equal hp (move h i (add1 i)))))

(defn mrhoi11a (n i l g h lp gp hp)
      (and (at l i 11)
           (at h i (add1 n))
           (equal lp (move l i 12))
           (equal gp g)
           (equal hp h)))

(defn mrhoi11b (n i l g h lp gp hp)
      (and (at l i 11)
           (lessp (nth h i) (add1 n))
           (not (union-at-n g (nth h i) '(2 3)))
           (equal hp (move h i (add1 (nth h i))))
           (equal gp g)
           (equal lp l)))


(defn mrhoi12 (n i l g h lp gp hp)      
      (and (at l i 12)
           (equal hp h)
           (equal gp (move g i 0))
           (equal lp (move l i 0))))

(defn mrhoi (n i l g h lp gp hp)                        
   (or (mrhoi0 n i l g h lp gp hp)
       (mrhoi1a n i l g h lp gp hp)
       (mrhoi1b n i l g h lp gp hp)
       (mrhoi2 n i l g h lp gp hp)
       (mrhoi3a n i l g h lp gp hp)
       (mrhoi3b n i l g h lp gp hp)
       (mrhoi4 n i l g h lp gp hp)
       (mrhoi5a n i l g h lp gp hp)
       (mrhoi5b n i l g h lp gp hp)
       (mrhoi5c n i l g h lp gp hp)
       (mrhoi6 n i l g h lp gp hp)
       (mrhoi7a n i l g h lp gp hp)
       (mrhoi7b n i l g h lp gp hp)
       (mrhoi8 n i l g h lp gp hp)
       (mrhoi9a n i l g h lp gp hp)
       (mrhoi9b n i l g h lp gp hp)
       (mrhoi10 n i l g h lp gp hp)
       (mrhoi11a n i l g h lp gp hp)
       (mrhoi11b n i l g h lp gp hp)
       (mrhoi12 n i l g h lp gp hp)))
(disable mrhoi)

;*  Invariants

;;;b0
(defn b0a (n l h i j)                                            
   (implies (and (at l i 5)
                 (lessp j (nth h i)))
            (not (at l j 4))))
(disable b0a)

(defn b0b (n l h i j)                                            
   (implies (and (at l i 5)
                 (lessp j (nth h i))
                 (at l j 3))
            (not (lessp i (nth h j)))))
(disable b0b)

;;;b1
(defn b1a (l i j)                                          
   (implies (union-at-n l i '(8 9 10 11 12))
            (not (at l j 4))))
(disable b1a)

(defn hint-8-12-3-4-at-n (n l g h j)
    (and (intersect-8-12-3-4-at-n n l g)
         (not (lessp n (nth h j)))))

(disable hint-8-12-3-4-at-n)

(defn exist-hint-8-12-3-4 (n l g h j)
   (if (zerop n) F
       (if (hint-8-12-3-4-at-n n l g h j) n
           (exist-hint-8-12-3-4 (sub1 n) l g h j))))

(disable  exist-hint-8-12-3-4)

(defn b1b (n l g h i j)                                          
   (implies (and (union-at-n l i '(8 9 10 11 12))
                 (at l j 3))
            (exist-hint-8-12-3-4 n l g h j)))
(disable b1b)

(defn b1c (n l g h i)
   (implies (and (union-at-n l i '(8 9 10 11 12))
                 (not (union-at-n g i '(3 4))))
            (and (member (nth h i) (nset n))
                 (at g (nth h i) 4))))
(disable b1c)

(defn b1d (n l h i)
   (implies (at l i 7)
            (member (nth h i) (nset n))))
(disable b1d)

;;;; b2
(defn b2a (l i j)
     (implies (and (lessp j i)
                   (union-at-n l i '(10 11 12)))
              (not (union-at-n l j '(5 6 7 8 9 10 11 12)))))
(disable b2a)

(defn b2b (l h i j)
     (implies (and (lessp j i)
                   (at l i 9)
                   (lessp j (nth h i)))
              (not (union-at-n l j '(5 6 7 8 9 10 11 12)))))
(disable b2b)

;;;b3
(defn b3a (l g i j)
    (implies (and (at l i 12)
                  (union-at-n l j '(5 6 7 8 9 10 11 12)))
             (at g j 4)))
(disable b3a)

(defn b3b (l g h i j)
    (implies (and (at l i 11)
                  (lessp j (nth h i))
                  (union-at-n l j '(5 6 7 8 9 10 11 12)))
             (at g j 4)))
(disable b3b)



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; molbasic.ev ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(prove-lemma hint-member (rewrite)
   (implies (exist-hint-8-12-3-4 n l g h j)
            (member (exist-hint-8-12-3-4 n l g h j) (nset n)))
   ((enable nset exist-hint-8-12-3-4 hint-8-12-3-4-at-n)))

(prove-lemma n-not-less-j (rewrite)  
   (implies (lessp n j)
            (not (member j (nset n))))
   ((enable nset)))

;;;molws implies that n is a number.
(prove-lemma molws-num-n (rewrite)
   (implies (molws n l g h)
            (numberp n))
   ((enable molws)))

;;;molws implies that l is a list.
(prove-lemma molws-list-l (rewrite)
   (implies (molws n l g h)
            (listp l))
   ((enable molws)))

;;;molws implies that g is a list.
(prove-lemma molws-list-g(rewrite)
   (implies (molws n l g h)
            (listp g))
   ((enable molws)))

;;;molws implies that h is a list.
(prove-lemma molws-list-h(rewrite)
   (implies (molws n l g h)
            (listp h))
   ((enable molws)))

;;;molws implies that length of l is n.
(prove-lemma molws-ln-l(rewrite)
   (implies (molws n l g h)
            (equal (length l) n))
   ((enable molws)))

;;;molws implies that length of g is n.
(prove-lemma molws-ln-g(rewrite)
   (implies (molws n l g h)
            (equal (length g) n))
   ((enable molws)))

;;;molws implies that length of h is n.
(prove-lemma molws-ln-h(rewrite)
   (implies (molws n l g h)
            (equal (length h) n))
   ((enable molws)))

;;;molws and mrho imply that lp is a list.
(prove-lemma molws-ln-lp (rewrite)
   (implies (and (molws n l g h)
                 (member  k (nset n))
                 (mrhoi n k l g h lp gp hp))
            (listp lp))
   ((enable mrhoi)))

;;;molws and mrho imply that gp is a list.
(prove-lemma molws-ln-gp (rewrite)
   (implies (and (molws n l g h)
                 (member  k (nset n))
                 (mrhoi n k l g h lp gp hp))
            (listp gp))
   ((enable mrhoi)))

;;;molws and mrho imply that hp is a list.
(prove-lemma molws-ln-hp (rewrite)
   (implies (and (molws n l g h)
                 (member  k (nset n))
                 (mrhoi n k l g h lp gp hp))
            (listp hp))
   ((enable mrhoi)))

;;;Another version of nset-number. 
;;;This is available in the theorem 
;;;where molws is disabled.
(prove-lemma molws-num-k (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n)))
            (numberp k))
   ((enable nset)))

(prove-lemma molws-union-h (rewrite)
   (implies (molws n l g h)
            (all-union h n (nset (add1 n))))
   ((enable molws)))

(prove-lemma lm-nth-numberp (rewrite)
   (implies (and (numberp i)
                 (all-union h n (nset i))
                 (member k (nset n)))
            (numberp (nth h k)))
   ((enable nset all-union union-at-n at)))

(prove-lemma nth-numberp (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n)))
            (numberp (nth h k)))
   ((use (lm-nth-numberp (i (add1 n))))))

;;;molws implies that n is nonzero.
(prove-lemma molws-n-not-0 (rewrite)
   (implies (molws n l g h)
            (not (equal n 0)))
   ((enable molws)))

;;;Auxiliary lemma.
(prove-lemma lm-l-mrholemma (rewrite)
   (implies (and (listp l)
                 (member j (nset (length l)))
                 (member k (nset (length l)))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal k j)))
            (equal (nth l j) (nth lp j)))
   ((enable mrhoi)))

(disable lm-l-mrholemma)

;;;Mrholemma for list l.
(prove-lemma l-mrholemma (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal k j)))
            (equal (nth l j) (nth lp j)))
   ((enable lm-l-mrholemma) (use (lm-l-mrholemma))))

;;;Auxiliary lemma.
(prove-lemma lm-g-mrholemma (rewrite)
   (implies (and (listp g)
                 (member j (nset (length g)))
                 (member k (nset (length g)))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal k j)))
            (equal (nth g j) (nth gp j)))
   ((enable mrhoi)))
 
(disable lm-g-mrholemma)

;;;Mrholemma for list g.
(prove-lemma g-mrholemma (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal k j)))
            (equal (nth g j) (nth gp j)))
   ((enable lm-g-mrholemma) (use (lm-g-mrholemma))))

;;;Auxiliary lemma.
(prove-lemma lm-h-mrholemma (rewrite)
   (implies (and (listp h)
                 (member j (nset (length h)))
                 (member k (nset (length h)))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal k j)))
            (equal (nth h j) (nth hp j)))
   ((enable mrhoi)))
 
(disable lm-h-mrholemma)

;;;Mrholemma for list g.
(prove-lemma h-mrholemma (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal k j)))
            (equal (nth h j) (nth hp j)))
   ((enable lm-h-mrholemma) (use (lm-h-mrholemma))))

;;; lp-gp-same-l-g

;;;Another version of Rholemma for l.
;;;It applies to (union-at-n l j m) in stead of 
;;;(nth l j).
(prove-lemma m-lp-same-l (rewrite)
   (implies  (and (molws n l g h)                  
                  (listp m)
                  (member j (nset n))
                  (member k (nset n))
                  (mrhoi n k l g h lp gp hp)
                  (not (equal j k))
                  (union-at-n l j m))
             (union-at-n lp j m))
   ((enable union-at-n at) (use (l-mrholemma))))

;;;Contrast to the one above, 
;;;the order of l and lp is reversed.
(prove-lemma m-l-same-lp (rewrite)
   (implies  (and (molws n l g h)                  
                  (listp m)
                  (member j (nset n))
                  (member k (nset n))
                  (mrhoi n k l g h lp gp hp)
                  (not (equal j k))
                  (union-at-n lp j m))
             (union-at-n l j m))
   ((enable union-at-n at) (use (l-mrholemma))))

(prove-lemma m-lp-same-l-not  (rewrite)
   (implies  (and (molws n l g h)                  
                  (listp m)
                  (member j (nset n))
                  (member k (nset n))
                  (mrhoi n k l g h lp gp hp)
                  (not (equal j k))
                  (not (union-at-n lp j m)))
             (not (union-at-n l j m)))
   ((use (m-lp-same-l))))

;;;Another version of Rholemma for g.
(prove-lemma m-gp-same-g (rewrite)
   (implies  (and (molws n l g h)                  
                  (listp m)
                  (member j (nset n))
                  (member k (nset n))
                  (mrhoi n k l g h lp gp hp)
                  (not (equal j k))
                  (union-at-n g j m))
             (union-at-n gp j m))
   ((enable union-at-n at) (use (g-mrholemma))))

;;;Contrast to the one above, 
;;;the order of g and gp is reversed.
(prove-lemma m-g-same-gp (rewrite)
   (implies  (and (molws n l g h)                  
                  (listp m)
                  (member j (nset n))
                  (member k (nset n))
                  (mrhoi n k l g h lp gp hp)
                  (not (equal j k))
                  (union-at-n gp j m))
             (union-at-n g j m))
   ((enable union-at-n at) (use (g-mrholemma))))

(prove-lemma m-gp-same-g-not  (rewrite)
   (implies  (and (molws n l g h)                  
                  (listp m)
                  (member j (nset n))
                  (member k (nset n))
                  (mrhoi n k l g h lp gp hp)
                  (not (equal j k))
                  (not (union-at-n gp j m)))
             (not (union-at-n g j m)))
   ((use (m-gp-same-g))))

;;;Another version of Rholemma for h.
(prove-lemma m-hp-same-h (rewrite)
   (implies  (and (molws n l g h)                  
                  (listp m)
                  (member j (nset n))
                  (member k (nset n))
                  (mrhoi n k l g h lp gp hp)
                  (not (equal j k))
                  (union-at-n h j m))
             (union-at-n hp j m))
   ((enable union-at-n at) (use (h-mrholemma))))

;;;Contrast to the one above, 
;;;the order of g and gp is reversed.
(prove-lemma m-h-same-hp (rewrite)
   (implies  (and (molws n l g h)                  
                  (listp m)
                  (member j (nset n))
                  (member k (nset n))
                  (mrhoi n k l g h lp gp hp)
                  (not (equal j k))
                  (union-at-n hp j m))
             (union-at-n h j m))
   ((enable union-at-n at) (use (h-mrholemma))))

;;;It applies to (at l j m) in stead of 
;;;(nth l j).
(prove-lemma m-l-same-lp-at (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (numberp m)
                 (mrhoi n k l g h lp gp hp)
                 (not (equal k j))
                 (at lp j m))
            (at l j m))
   ((enable at) (use (l-mrholemma))))

(prove-lemma m-gp-same-g-at (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (numberp m)
                 (mrhoi n k l g h lp gp hp)
                 (not (equal k j))
                 (at g j m))
            (at gp j m))
   ((enable at) (use (g-mrholemma))))

(prove-lemma m-l-same-lp-at-not  (rewrite)
   (implies  (and (molws n l g h)                  
                  (numberp m)
                  (member j (nset n))
                  (member k (nset n))
                  (mrhoi n k l g h lp gp hp)
                  (not (equal j k))
                  (not (at l j m)))
             (not (at lp j m)))
   ((use (m-l-same-lp-at))))



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; mollg.ev ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;mrhoi0
(prove-lemma n-neq-k-mrhoi0 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (not (equal k n))
                  (at l k 0)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 1) g))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-neq-k-mrhoi0)

(prove-lemma n-eq-k-mrhoi0 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (at l k 0)
                  (lg-at-n k l g))
            (lg-at-n k (move l k 1) g))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-eq-k-mrhoi0)

(prove-lemma lg-at-mrhoi0 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (at l k 0)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 1) g))
   ((enable n-neq-k-mrhoi0 n-eq-k-mrhoi0)
    (use (n-neq-k-mrhoi0))))

(disable lg-at-mrhoi0)

(prove-lemma lg-mrhoi0 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (numberp n)
                  (at l k 0)
                  (lg n l g))
            (lg n (move l k 1) g))
   ((enable lg-at-mrhoi0 lg at)))

(disable lg-mrhoi0)

(prove-lemma mrhoi0-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi0 n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable lg-mrhoi0)))

;;;mrhoi1a
(prove-lemma n-neq-k-mrhoi1a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (not (equal k n))
                  (at l k 1)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 2) g))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-neq-k-mrhoi1a)

(prove-lemma n-eq-k-mrhoi1a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (at l k 1)
                  (lg-at-n k l g))
            (lg-at-n n (move l k 2) g))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-eq-k-mrhoi1a)

(prove-lemma lg-at-mrhoi1a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (at l k 1)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 2) g))
   ((enable n-neq-k-mrhoi1a n-eq-k-mrhoi1a)
    (use (n-neq-k-mrhoi1a))))

(disable lg-at-mrhoi1a)

(prove-lemma lg-mrhoi1a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (numberp n)
                  (at l k 1)
                  (lg n l g))
            (lg n (move l k 2) g))
   ((enable lg-at-mrhoi1a lg at)))

(disable lg-mrhoi1a)

(prove-lemma mrhoi1a-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi1a n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable lg-mrhoi1a)))

;;;mrhoi1b
(prove-lemma mrhoi1b-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi1b n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable mrhoi1b)))

;;;mrhoi2
(prove-lemma n-neq-k-mrhoi2 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (not (equal k n))
                  (at l k 2)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 3) (move g k 1)))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-neq-k-mrhoi2)

(prove-lemma n-eq-k-mrhoi2 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (at l k 2)
                  (lg-at-n k l g))
            (lg-at-n n (move l k 3) (move g k 1)))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-eq-k-mrhoi2)

(prove-lemma lg-at-mrhoi2 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (at l k 2)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 3) (move g k 1)))
   ((enable n-neq-k-mrhoi2 n-eq-k-mrhoi2)
    (use (n-neq-k-mrhoi2))))

(disable lg-at-mrhoi2)

(prove-lemma lg-mrhoi2 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (numberp n)
                  (at l k 2)
                  (lg n l g))
            (lg n (move l k 3) (move g k 1)))
   ((enable lg-at-mrhoi2 lg at)))

(disable lg-mrhoi2)

(prove-lemma mrhoi2-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi2 n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable lg-mrhoi2)))

;;;mrhoi3a
(prove-lemma n-neq-k-mrhoi3a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (not (equal k n))
                   (at l k 3)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 4) g))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-neq-k-mrhoi3a)

(prove-lemma n-eq-k-mrhoi3a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                   (at l k 3)
                  (lg-at-n k l g))
            (lg-at-n k (move l k 4) g))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-eq-k-mrhoi3a)

(prove-lemma lg-at-mrhoi3a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                   (at l k 3)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 4) g))
   ((enable n-neq-k-mrhoi3a n-eq-k-mrhoi3a)
    (use (n-neq-k-mrhoi3a))))

(disable lg-at-mrhoi3a)

(prove-lemma lg-mrhoi3a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (numberp n)
                   (at l k 3)
                  (lg n l g))
            (lg n (move l k 4) g))
   ((enable lg-at-mrhoi3a lg at)))

(disable lg-mrhoi3a)

(prove-lemma mrhoi3a-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi3a n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable lg-mrhoi3a)))

;;;mrhoi3b
(prove-lemma mrhoi3b-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi3b n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable mrhoi3b)))

;;;mrhoi4
(prove-lemma n-neq-k-mrhoi4 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (not (equal k n))
                  (at l k 4)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 5) (move g k 3)))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-neq-k-mrhoi4)

(prove-lemma n-eq-k-mrhoi4 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (at l k 4)
                  (lg-at-n k l g))
            (lg-at-n n (move l k 5) (move g k 3)))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-eq-k-mrhoi4)

(prove-lemma lg-at-mrhoi4 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (at l k 4)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 5) (move g k 3)))
   ((enable n-neq-k-mrhoi4 n-eq-k-mrhoi4)
    (use (n-neq-k-mrhoi4))))

(disable lg-at-mrhoi4)

(prove-lemma lg-mrhoi4 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (numberp n)
                  (at l k 4)
                  (lg n l g))
            (lg n (move l k 5) (move g k 3)))
   ((enable lg-at-mrhoi4 lg at)))

(disable lg-mrhoi4)

(prove-lemma mrhoi4-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi4 n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable lg-mrhoi4)))

;;;mrhoi5a
(prove-lemma n-neq-k-mrhoi5a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (not (equal k n))
                  (at l k 5)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 8) g))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-neq-k-mrhoi5a)

(prove-lemma n-eq-k-mrhoi5a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (at l k 5)
                  (lg-at-n k l g))
            (lg-at-n k (move l k 8) g))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-eq-k-mrhoi5a)

(prove-lemma lg-at-mrhoi5a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (at l k 5)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 8) g))
   ((enable n-neq-k-mrhoi5a n-eq-k-mrhoi5a)
    (use (n-neq-k-mrhoi5a))))

(disable lg-at-mrhoi5a)

(prove-lemma lg-mrhoi5a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (numberp n)
                  (at l k 5)
                  (lg n l g))
            (lg n (move l k 8) g))
   ((enable lg-at-mrhoi5a lg at)))

(disable lg-mrhoi5a)

(prove-lemma mrhoi5a-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi5a n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable lg-mrhoi5a)))

;;;mrhoi5b
(prove-lemma n-neq-k-mrhoi5b (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (not (equal k n))
                  (at l k 5)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 6) g))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-neq-k-mrhoi5b)

(prove-lemma n-eq-k-mrhoi5b (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (at l k 5)
                  (lg-at-n k l g))
            (lg-at-n k (move l k 6) g))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-eq-k-mrhoi5b)

(prove-lemma lg-at-mrhoi5b (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (at l k 5)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 6) g))
   ((enable n-neq-k-mrhoi5b n-eq-k-mrhoi5b)
    (use (n-neq-k-mrhoi5b))))

(disable lg-at-mrhoi5b)

(prove-lemma lg-mrhoi5b (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (numberp n)
                  (at l k 5)
                  (lg n l g))
            (lg n (move l k 6) g))
   ((enable lg-at-mrhoi5b lg at)))

(disable lg-mrhoi5b)

(prove-lemma mrhoi5b-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi5b n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable lg-mrhoi5b)))

;;;mrhoi5c
(prove-lemma mrhoi5c-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi5c n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable mrhoi5c)))

;;;mrhoi6
(prove-lemma n-neq-k-mrhoi6 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (not (equal k n))
                  (at l k 6)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 7) (move g k 2)))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-neq-k-mrhoi6)

(prove-lemma n-eq-k-mrhoi6 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (at l k 6)
                  (lg-at-n k l g))
            (lg-at-n n (move l k 7) (move g k 2)))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-eq-k-mrhoi6)

(prove-lemma lg-at-mrhoi6 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (at l k 6)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 7) (move g k 2)))
   ((enable n-neq-k-mrhoi6 n-eq-k-mrhoi6)
    (use (n-neq-k-mrhoi6))))

(disable lg-at-mrhoi6)

(prove-lemma lg-mrhoi6 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (numberp n)
                  (at l k 6)
                  (lg n l g))
            (lg n (move l k 7) (move g k 2)))
   ((enable lg-at-mrhoi6 lg at)))

(disable lg-mrhoi6)

(prove-lemma mrhoi6-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi6 n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable lg-mrhoi6)))

;;;mrhoi7a
(prove-lemma n-neq-k-mrhoi7a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (not (equal k n))
                  (at l k 7)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 8) g))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-neq-k-mrhoi7a)

(prove-lemma n-eq-k-mrhoi7a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (at l k 7)
                  (lg-at-n k l g))
            (lg-at-n k (move l k 8) g))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-eq-k-mrhoi7a)

(prove-lemma lg-at-mrhoi7a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (at l k 7)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 8) g))
   ((enable n-neq-k-mrhoi7a n-eq-k-mrhoi7a)
    (use (n-neq-k-mrhoi7a))))

(disable lg-at-mrhoi7a)

(prove-lemma lg-mrhoi7a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (numberp n)
                  (at l k 7)
                  (lg n l g))
            (lg n (move l k 8) g))
   ((enable lg-at-mrhoi7a lg at)))

(disable lg-mrhoi7a)

(prove-lemma mrhoi7a-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi7a n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable lg-mrhoi7a)))

;;;mrhoi7b
(prove-lemma mrhoi7b-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi7b n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable mrhoi7b)))

;;;mrhoi8
(prove-lemma n-neq-k-mrhoi8 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (not (equal k n))
                  (at l k 8)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 9) (move g k 4)))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-neq-k-mrhoi8)

(prove-lemma n-eq-k-mrhoi8 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (at l k 8)
                  (lg-at-n k l g))
            (lg-at-n n (move l k 9) (move g k 4)))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-eq-k-mrhoi8)

(prove-lemma lg-at-mrhoi8 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (at l k 8)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 9) (move g k 4)))
   ((enable n-neq-k-mrhoi8 n-eq-k-mrhoi8)
    (use (n-neq-k-mrhoi8))))

(disable lg-at-mrhoi8)

(prove-lemma lg-mrhoi8 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (numberp n)
                  (at l k 8)
                  (lg n l g))
            (lg n (move l k 9) (move g k 4)))
   ((enable lg-at-mrhoi8 lg at)))

(disable lg-mrhoi8)

(prove-lemma mrhoi8-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi8 n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable lg-mrhoi8)))

;;;mrhoi9a
(prove-lemma n-neq-k-mrhoi9a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (not (equal k n))
                  (at l k 9)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 10) g))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-neq-k-mrhoi9a)

(prove-lemma n-eq-k-mrhoi9a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (at l k 9)
                  (lg-at-n k l g))
            (lg-at-n k (move l k 10) g))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-eq-k-mrhoi9a)

(prove-lemma lg-at-mrhoi9a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (at l k 9)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 10) g))
   ((enable n-neq-k-mrhoi9a n-eq-k-mrhoi9a)
    (use (n-neq-k-mrhoi9a))))

(disable lg-at-mrhoi9a)

(prove-lemma lg-mrhoi9a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (numberp n)
                  (at l k 9)
                  (lg n l g))
            (lg n (move l k 10) g))
   ((enable lg-at-mrhoi9a lg at)))

(disable lg-mrhoi9a)

(prove-lemma mrhoi9a-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi9a n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable lg-mrhoi9a)))

;;;mrhoi9b
(prove-lemma mrhoi9b-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi9b n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable mrhoi9b)))

;;;mrhoi10
(prove-lemma n-neq-k-mrhoi10 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (not (equal k n))
                  (at l k 10)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 11) g))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-neq-k-mrhoi10)

(prove-lemma n-eq-k-mrhoi10 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (at l k 10)
                  (lg-at-n k l g))
            (lg-at-n k (move l k 11) g))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-eq-k-mrhoi10)

(prove-lemma lg-at-mrhoi10 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (at l k 10)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 11) g))
   ((enable n-neq-k-mrhoi10 n-eq-k-mrhoi10)
    (use (n-neq-k-mrhoi10))))

(disable lg-at-mrhoi10)

(prove-lemma lg-mrhoi10 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (numberp n)
                  (at l k 10)
                  (lg n l g))
            (lg n (move l k 11) g))
   ((enable lg-at-mrhoi10 lg at)))

(disable lg-mrhoi10)

(prove-lemma mrhoi10-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi10 n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable lg-mrhoi10)))

;;;mrhoi11a
(prove-lemma n-neq-k-mrhoi11a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (not (equal k n))
                  (at l k 11)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 12) g))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-neq-k-mrhoi11a)

(prove-lemma n-eq-k-mrhoi11a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (at l k 11)
                  (lg-at-n k l g))
            (lg-at-n k (move l k 12) g))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-eq-k-mrhoi11a)

(prove-lemma lg-at-mrhoi11a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (at l k 11)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 12) g))
   ((enable n-neq-k-mrhoi11a n-eq-k-mrhoi11a)
    (use (n-neq-k-mrhoi11a))))

(disable lg-at-mrhoi11a)

(prove-lemma lg-mrhoi11a (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (numberp n)
                  (at l k 11)
                  (lg n l g))
            (lg n (move l k 12) g))
   ((enable lg-at-mrhoi11a lg at)))

(disable lg-mrhoi11a)

(prove-lemma mrhoi11a-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi11a n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable lg-mrhoi11a)))

;;;mrhoi11b
(prove-lemma mrhoi11b-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi11b n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable mrhoi11b)))

;;;mrhoi12
(prove-lemma n-neq-k-mrhoi12 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (not (equal k n))
                  (at l k 12)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 0) (move g k 0)))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))
 
(disable n-neq-k-mrhoi12)

(prove-lemma n-eq-k-mrhoi12 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (at l k 12)
                  (lg-at-n k l g))
            (lg-at-n n (move l k 0) (move g k 0)))
   ((enable at lg-at-n lg-1-at-n lg-2-at-n lg-3-at-n)))

(disable n-eq-k-mrhoi12)

(prove-lemma lg-at-mrhoi12 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (numberp n)
                  (member k (nset (length l)))
                  (at l k 12)
                  (lg-at-n n l g))
            (lg-at-n n (move l k 0) (move g k 0)))
   ((enable n-neq-k-mrhoi12 n-eq-k-mrhoi12)
    (use (n-neq-k-mrhoi12))))

(disable lg-at-mrhoi12)

(prove-lemma lg-mrhoi12 (rewrite)
   (implies (and  (listp l)
                  (listp g)
                  (member k (nset (length l)))
                  (numberp n)
                  (at l k 12)
                  (lg n l g))
            (lg n (move l k 0) (move g k 0)))
   ((enable lg-at-mrhoi12 lg at)))

(disable lg-mrhoi12)

(prove-lemma mrhoi12-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi12 n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((enable lg-mrhoi12)))

(prove-lemma mrho-preserves-lg (rewrite)
   (implies (and  (molws n l g h)
                  (member k (nset n))
                  (mrhoi n k l g h lp gp hp)
                  (lg n l g))
            (lg n lp gp))
   ((disable mrhoi0 mrhoi1a mrhoi1b mrhoi2 mrhoi3a 
             mrhoi3b mrhoi4 mrhoi5a mrhoi5b mrhoi5c
             mrhoi6 mrhoi7a mrhoi7b mrhoi8 mrhoi9a 
             mrhoi9b mrhoi10 mrhoi11a mrhoi11b mrhoi12)
    (enable mrhoi)))

(disable mrhoi0-preserves-lg)
(disable mrhoi1a-preserves-lg)
(disable mrhoi1b-preserves-lg)
(disable mrhoi2-preserves-lg)
(disable mrhoi3a-preserves-lg)
(disable mrhoi3b-preserves-lg)
(disable mrhoi4-preserves-lg)
(disable mrhoi5a-preserves-lg)
(disable mrhoi5b-preserves-lg)
(disable mrhoi5c-preserves-lg)
(disable mrhoi6-preserves-lg)
(disable mrhoi7a-preserves-lg)
(disable mrhoi7b-preserves-lg)
(disable mrhoi8-preserves-lg)
(disable mrhoi9a-preserves-lg)
(disable mrhoi9b-preserves-lg)
(disable mrhoi10-preserves-lg)
(disable mrhoi11a-preserves-lg)
(disable mrhoi11b-preserves-lg)
(disable mrhoi12-preserves-lg)



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;   b0.ev   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;   b0a   ;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;Common in mole and atom.
(prove-lemma b0a-if1 (rewrite)
   (implies (and (member j (nset n))
                 (lg n l g)
                 (not (at g j 1)))
            (not (at l j 4)))
   ((enable lg lg-at-n lg-1-at-n nset at)))
;;;;;;;;;;;;;comm end.

(prove-lemma if1-nth-h-k (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (member j (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at h k j)
                 (not (at g (nth h k) 1)))
            (not (at l j 4)))
   ((enable at) (use (b0a-if1))))

(prove-lemma l5-not-g1 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (member j (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at h k j)
                 (at l k 5)
                 (at lp k 5))
             (not (at g (nth h k) 1)))
   ((enable mrhoi at)))

(prove-lemma l5-nth-h-k-eq-j (rewrite)
   (implies (and (at h k j)
                 (molws n l g h)
                 (member k (nset n))
                 (member j (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l k 5)
                 (at lp k 5))
            (not (at l j 4)))
   ((use (if1-nth-h-k) (l5-not-g1))))

(prove-lemma l5-j-lt-nth-k (rewrite)
   (implies (and (lessp j (nth h k))
                 (molws n l g h)
                 (member k (nset n))
                 (member j (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b0a n l h k j)
                 (at l k 5))
            (not (at l j 4)))
   ((enable b0a)))

(prove-lemma  nth-k-lt-j-or-eq-j (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (member j (nset n))
                 (lessp (sub1 j) (nth h k))
                 (not (lessp j (nth h k))))
            (at h k j))
   ((enable at)))

(prove-lemma lm-j-not-in-l4 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b0a n l h k j)
                 (at l k 5)
                 (at lp k 5)
                 (lessp (sub1 j) (nth h k)))
            (not (at l j 4)))
   ((use (nth-k-lt-j-or-eq-j))))

(prove-lemma  cond-l5 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (member j (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 5)
                 (lessp j (nth hp k)))
            (lessp (sub1 j) (nth h k)))
   ((enable mrhoi at)))

(prove-lemma j-not-in-l4 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b0a n l h k j)
                 (at l k 5)
                 (at lp k 5)
                 (lessp j (nth hp k)))
            (not (at l j 4)))
   ((use (lm-j-not-in-l4) (cond-l5))))

(prove-lemma k-in-l5 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at lp k 5)
                 (lessp j (nth hp k)))
            (at l k 5))
   ((enable mrhoi at)))

;;;The order of the hints is crucial.
(prove-lemma lm-b0a-i-eq-k-j-neq-k (rewrite)                 
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b0a n l h k j)
                 (at lp k 5)
                 (lessp j (nth hp k)))
            (not (at l j 4)))
   ((use (k-in-l5) (j-not-in-l4))))

(prove-lemma b0a-i-eq-k-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (lg n l g)
                 (b0a n l h k j))
            (b0a n lp hp k j))
   ((enable b0a)
    (use (lm-b0a-i-eq-k-j-neq-k))))

(prove-lemma b0a-i-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b0a n l h k k))
            (b0a n lp hp k k))
   ((enable at b0a)))

(prove-lemma b0a-i-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b0a n l h k j))
            (b0a n lp hp k j))
   ((use (b0a-i-eq-k-j-neq-k))))

;;;n-not-less-j is necessary.
(prove-lemma cond-lp4 (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 3)
                 (not (lessp i (nth h k))))
            (not (at lp k 4)))
   ((enable mrhoi at)))

(prove-lemma not-l3-then-lp4 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (at l k 3)))
            (not (at lp k 4)))
   ((enable mrhoi at)))

(prove-lemma i-in-l5 (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b0b n l h i k)
                 (at l i 5)
                 (lessp k (nth h i)))
            (not (at lp k 4)))
   ((enable b0b)
    (use (cond-lp4)(not-l3-then-lp4))))

(prove-lemma lm-b0a-i-neq-k-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (b0b n l h i k)
                 (at lp i 5)
                 (lessp k (nth h i)))
            (not (at lp k 4)))
   ((use (i-in-l5))))

(prove-lemma b0a-i-neq-k-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (b0a n l h i k)
                 (b0b n l h i k))
            (b0a n lp hp i k))
   ((enable b0a)
    (use (lm-b0a-i-neq-k-j-eq-k))))

(prove-lemma b0a-i-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (not (equal j k))
                 (b0a n l h i j)
                 (b0b n l h i j))
            (b0a n lp hp i j))
   ((enable b0a)))

(prove-lemma b0a-i-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (b0a n l h i j)
                 (b0b n l h i j))
            (b0a n lp hp i j))
   ((use (b0a-i-j-neq-k))))

(prove-lemma rho-preserves-b0a ()
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b0a n l h i j)
                 (b0b n l h i j))
            (b0a n lp hp i j))
   ((use (b0a-i-neq-k) (b0a-i-eq-k))))


;;;;;;;;;;;;;   b0b   ;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;Common in mole and atom.
(prove-lemma b0b-if1 (rewrite)
   (implies (and (member j (nset n))
                 (lg n l g)
                 (at l j 3))
             (at g j 1))
   ((enable nset at lg lg-at-n lg-1-at-n)))

(prove-lemma b0b-if3 (rewrite)
   (implies (and (member i (nset n))
                 (lg n l g)
                 (at l i 5))
             (not (union-at-n g i '(0 1 2))))
   ((enable lg lg-at-n lg-2-at-n union-at-n 
            at nset)))
;;;;;;;;;;;;;;;;;Common in mole and atom end.

(prove-lemma lm-j-neq-h-k (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (member j (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l j 3)
                 (not (at g (nth h k) 1)))
            (not (at h k j)))
   ((enable at) (use (b0b-if1))))

(prove-lemma h-k-not-g1 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 5)
                 (at lp k 5))
            (not (at g (nth h k) 1)))
   ((enable mrhoi at)))

(prove-lemma j-neq-h-k (rewrite) 
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at lp k 5)
                 (at l k 5)
                 (at l j 3))
            (not (at h k j)))
   ((use (h-k-not-g1) (lm-j-neq-h-k))))

(prove-lemma n-k-leq-sub1-i(rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (member i (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (at h k i))
                 (not (lessp i (nth h k))))
            (not (lessp (sub1 i) (nth h k))))
   ((enable at)))

;;;This is proved with help of n-k-leq-sub1-i.
(prove-lemma lm1-j-in-l3 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b0b n l h k j)
                 (at l k 5)
                 (at lp k 5)
                 (at l j 3)
                 (lessp (sub1 j) (nth h k)))
            (not (lessp k (nth h j))))
   ((enable b0b) (use (j-neq-h-k))))

(prove-lemma lm-j-in-l3 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b0b n l h k j)
                 (at l k 5)
                 (at lp k 5)
                 (at l j 3)
                 (lessp j (nth hp k)))
            (not (lessp k (nth h j))))
   ((use (lm1-j-in-l3) (cond-l5))))

;;;The order of hints is crucial.
(prove-lemma j-in-l3 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b0b n l h k j)
                 (at lp k 5)
                 (at l j 3)
                 (lessp j (nth hp k)))
            (not (lessp k (nth h j))))
   ((use (k-in-l5) (lm-j-in-l3))))

(prove-lemma lm-b0b-i-eq-k-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (lg n l g)
                 (b0b n l h k j)
                 (at lp k 5)
                 (at lp j 3)
                 (lessp j (nth hp k)))
            (not (lessp k (nth h j))))
   ((use (j-in-l3))))

(prove-lemma b0b-i-eq-k-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (lg n l g)
                 (b0b n l h k j))
            (b0b n lp hp k j))
   ((enable b0b) (use (lm-b0b-i-eq-k-j-neq-k))))

(prove-lemma b0b-i-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g))
            (b0b n lp hp k k))
   ((enable b0b at)))

(prove-lemma b0b-i-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b0b n l h k j))
            (b0b n lp hp k j))
   ((use (b0b-i-eq-k-j-neq-k) (b0b-i-j-eq-k))))

(prove-lemma lm-i-neq-h-k (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (member i (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l i 5)
                 (union-at-n g (nth h k) '(0 1 2)))
            (not (at h k i)))
   ((enable at) (use (b0b-if3))))

(prove-lemma h-k-g02 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 3)
                 (at lp k 3))
            (union-at-n g (nth h k) '(0 1 2)))
   ((enable at mrhoi)))

(prove-lemma i-neq-h-k (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (member i (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l i 5)
                 (at l k 3)
                 (at lp k 3))
            (not (at h k i)))
   ((use (h-k-g02) (lm-i-neq-h-k))))

(prove-lemma lm1-k-in-l3-imp (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (member i (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l i 5)
                 (at l k 3)
                 (at lp k 3)
                 (not (lessp i (nth h k))))
            (not (lessp (sub1 i) (nth h k))))
    ((use (i-neq-h-k) (n-k-leq-sub1-i))))

(prove-lemma lm-k-in-l3-imp (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (member i (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b0b n l h i k)
                 (at l i 5)
                 (at l k 3)
                 (at lp k 3)
                 (lessp k (nth h i)))
            (not (lessp (sub1 i) (nth h k))))
   ((enable b0b) (use (lm1-k-in-l3-imp))))

(prove-lemma  cond-l3 (rewrite)                 
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (member i (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 3)
                 (lessp i (nth hp k)))
            (lessp (sub1 i) (nth h k)))
   ((enable mrhoi at)))

(prove-lemma k-in-l3-imp (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b0b n l h i k)
                 (at l i 5)
                 (at l k 3)
                 (at lp k 3)
                 (lessp k (nth h i)))
            (not (lessp i (nth hp k))))
   ((use (lm-k-in-l3-imp) (cond-l3))))

(prove-lemma k-in-l2-imp (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at lp k 3)
                 (at l k 2))
            (not (lessp i (nth hp k))))
   ((enable mrhoi at)))

(prove-lemma lp3-then-l2-or-l3 (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at lp k 3)
                 (not (at l k 2)))
            (at l k 3))
   ((enable mrhoi at)))

(prove-lemma b0b-i-in-l5 (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b0b n l h i k)
                 (at l i 5)
                 (at lp k 3)
                 (lessp k (nth h i)))
            (not (lessp i (nth hp k))))
   ((use (lp3-then-l2-or-l3) (k-in-l3-imp)
         (k-in-l2-imp))))

(prove-lemma lm-b0b-i-neq-k-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (b0b n l h i k)
                 (lg n l g)
                 (at lp i 5)
                 (at lp k 3)
                 (lessp k (nth h i)))
            (not (lessp i (nth hp k))))
   ((use (b0b-i-in-l5) (m-l-same-lp-at (j i) (m 5)))))

(prove-lemma b0b-i-neq-k-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (b0b n l h i k)
                 (lg n l g))
            (b0b n lp hp i k))
   ((enable b0b) (use (lm-b0b-i-neq-k-j-eq-k))))

(prove-lemma b0b-i-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (not (equal j k))
                 (b0b n l h i j))
            (b0b n lp hp i j))
   ((enable b0b)))

(prove-lemma b0b-i-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (lg n l g)
                 (b0b n l h i j))
            (b0b n lp hp i j))
   ((use (b0b-i-j-neq-k) (b0b-i-neq-k-j-eq-k))))

(prove-lemma rho-preserves-b0b ()
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b0b n l h i j))
            (b0b n lp hp i j))
   ((use (b0b-i-neq-k) (b0b-i-eq-k))))



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;   b1.ev   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;   b1a   ;;;;;;;;;;;;;;;;

(prove-lemma lm-h-k-eq-add1-n-nex-hint (rewrite)
   (implies (and (not (zerop n))
                 (listp h)
                 (not (lessp n i))
                 (member k (nset n))
                 (lessp n (nth h k)))
            (not (exist-hint-8-12-3-4 i l g h k)))
   ((enable exist-hint-8-12-3-4 
            hint-8-12-3-4-at-n at)))

(prove-lemma h-k-eq-add1-n-nex-hint (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (at h k (add1 n)))
            (not (exist-hint-8-12-3-4 n l g h k)))
   ((enable at)
    (use (lm-h-k-eq-add1-n-nex-hint (i n)))))

(prove-lemma h-k-eq-add1-n-k-not-in-l3 (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1b n l g h i k)
                 (at h k (add1 n))
                 (union-at-n l i '(8 9 10 11 12)))
            (not (at l k 3)))
   ((enable b1b)
    (use (h-k-eq-add1-n-nex-hint))))

(prove-lemma not-l3-then-not-lp4 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (at l k 3)))
            (not (at lp k 4)))
   ((enable at mrhoi)))

(prove-lemma h-k-eq-add1-n (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1b n l g h i k)
                 (at h k (add1 n))
                 (union-at-n l i '(8 9 10 11 12)))
            (not (at lp k 4)))
   ((use (h-k-eq-add1-n-k-not-in-l3))))

(prove-lemma h-k-neq-add1-n (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (at h k (add1 n))))
            (not (at lp k 4)))
   ((enable at mrhoi)))

;;;The order of the hints is crucial.
(prove-lemma lm-b1a-i-neq-k-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1b n l g h i k)
                 (union-at-n l i '(8 9 10 11 12)))
            (not (at lp k 4)))
   ((use (h-k-eq-add1-n) (h-k-neq-add1-n))))

;;;need m-l-same-lp.
(prove-lemma b1a-i-neq-k-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (b1b n l g h i k))
            (b1a lp i k))
    ((enable b1a) (use (lm-b1a-i-neq-k-j-eq-k))))

(prove-lemma b1a-i-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (not (equal j k))
                 (b1a l i j))
            (b1a lp i j))
   ((enable b1a)))

(prove-lemma b1a-i-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (b1a l i j)
                 (b1b n l g h i j))
            (b1a lp i j))
   ((use (b1a-i-j-neq-k))))

(prove-lemma cond-l7 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 7)
                 (union-at-n lp k '(8 9 10 11 12)))
            (at g (nth h k) 4))
   ((enable mrhoi union-at-n at)))

(prove-lemma k-in-l7-imp (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (lg n l g)
                 (at l k 7)
                 (b1a l (nth h k) j)
                 (union-at-n lp k '(8 9 10 11 12)))
            (not (at l j 4)))
   ((enable b1a b1d)
    (use (cond-l7) (b1a-if4 (u (nth h k))))))

(prove-lemma l5-j-lt-h-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 5)
                 (union-at-n lp k '(8 9 10 11 12)))
             (lessp j (nth h k)))
   ((enable union-at-n at mrhoi)))

(prove-lemma k-in-l5-then-j-not-l4 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 5)
                 (union-at-n lp k '(8 9 10 11 12))
                 (b0a n l h k j))
            (not (at l j 4)))
   ((enable b0a) (use (l5-j-lt-h-k))))

(prove-lemma lp9-12-k-in-l8-12 (rewrite)               
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (union-at-n lp k '(9 10 11 12)))
            (union-at-n l k '(8 9 10 11 12)))
   ((enable at union-at-n mrhoi)))

(prove-lemma k-in-lp9-12-then-j-not-l4 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1a l k j)
                 (union-at-n lp k '(9 10 11 12)))
            (not (at l j 4)))
   ((enable b1a) (use (lp9-12-k-in-l8-12))))

(prove-lemma k-not-in-l7-then-lp9-12-or-l5 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (union-at-n lp k '(8 9 10 11 12))
                 (not (at l k 7))
                 (not (union-at-n lp k '(9 10 11 12))))
            (at l k 5))
   ((enable at union-at-n mrhoi)))

(prove-lemma k-in-not-l7-imp (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (at l k 7))
                 (b0a n l h k j)
                 (b1a l k j)
                 (union-at-n lp k '(8 9 10 11 12)))
            (not (at l j 4)))
   ((use (k-not-in-l7-then-lp9-12-or-l5))))

;;;I wonder why the following two do not imply 
;;;lm-b1a-i-eq-k-j-neq-k although those without
;;;(member u (nset n)) are perfectly able to
;;;imply it.
;;;(prove-lemma k-in-lp9-12-then-j-not-l4 (rewrite)
;;;   (implies (and (molws n l g h)
;;;                 (member j (nset n))
;;;                 (member k (nset n))
;;;                 (mrhoi n k l g h lp gp hp)
;;;                 (b1a l k j)
;;;                 (union-at-n lp k '(9 10 11 12)))
;;;            (not (at l j 4))))
;;;
;;;(prove-lemma k-in-lp8-then-j-not-l4 (rewrite)
;;;   (implies (and (at lp k 8)
;;;                 (molws n l g h)
;;;                 (member j (nset n))
;;;                 (member u (nset n))
;;;                 (member k (nset n))
;;;                 (mrhoi n k l g h lp gp hp)
;;;                 (lg n l g)
;;;                 (b0a n l h k j)
;;;                 (b1a l (nth h k) j))
;;;            (not (at l j 4))))

(prove-lemma lm-b1a-i-eq-k-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (lg n l g)
                 (b0a n l h k j)
                 (b1a l k j)
                 (b1a l (nth h k) j)
                 (union-at-n lp k '(8 9 10 11 12)))
            (not (at l j 4)))
  ((use (k-in-l7-imp))))

;;;m-l-same-lp-at-not is used.
(prove-lemma b1a-i-eq-k-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (b1d n l h k)
                 (lg n l g)
                 (b0a n l h k j)
                 (b1a l k j)
                 (b1a l (nth h k) j))
            (b1a lp k j))
   ((enable b1a) (use (lm-b1a-i-eq-k-j-neq-k))))

(prove-lemma b1a-i-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1a l k k))
            (b1a lp k k))
   ((enable b1a at union-at-n)))

(prove-lemma b1a-i-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (lg n l g)
                 (b0a n l h k j)
                 (b1a l k j)
                 (b1a l (nth h k) j))
            (b1a lp k j))
   ((use (b1a-i-eq-k-j-neq-k))))

(prove-lemma mrho-preserves-b1a ()
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h i)
                 (lg n l g)
                 (b0a n l h i j)
                 (b1a l i j)
                 (b1a l (nth h i) j)
                 (b1b n l g h i j))
            (b1a lp i j))
   ((use (b1a-i-neq-k) (b1a-i-eq-k))))


;;;;;;;;;;;;;   b1b   ;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;common in mole and atom.
(prove-lemma un8-11-then-un8-12 (rewrite)
   (implies (union-at-n lp r '(8 9 10 11))
            (union-at-n lp r '(8 9 10 11 12)))
   ((enable union-at-n)))

(prove-lemma l8-11-k-in-gp34 (rewrite)               
   (implies (and (member r (nset n))
                 (lg n l g)
                 (union-at-n l r '(8 9 10 11)))
            (union-at-n gp r '(3 4)))
   ((enable lg lg-at-n lg-2-at-n lg-3-at-n 
            union-at-n at nset)))

(prove-lemma u-if4 (rewrite)
   (implies (and (member u (nset n))
                 (lg n l g)
                 (at g u 4))
            (not (at l u 2)))
   ((enable lg lg-at-n lg-3-at-n at nset)))

(prove-lemma l12-then-un10-12 (rewrite)
   (implies (at l u 12)
            (union-at-n l u '(10 11 12)))
   ((enable at union-at-n)))

(prove-lemma r-neq-k (rewrite)
   (implies (and (union-at-n l k '(8 9 10 11))
                 (at l r 12))
            (not (equal k r)))
   ((enable union-at-n at)))
;;;;;;;;;;;;;;;;;common in mole and atom end.
;;;;;;;;;;;;;;;;;Lemmas on hints.

(prove-lemma ex-hint-in-l8-12 (rewrite)
   (implies  (exist-hint-8-12-3-4 n l g h j)
             (union-at-n l (exist-hint-8-12-3-4 n 
              l g h j) '(8 9 10 11 12)))
   ((enable exist-hint-8-12-3-4 union-at-n at 
            hint-8-12-3-4-at-n 
            intersect-8-12-3-4-at-n)))

(prove-lemma ex-hint-in-g34 (rewrite)
   (implies  (exist-hint-8-12-3-4 n l g h k)
             (union-at-n g (exist-hint-8-12-3-4 n 
                            l g h k) '(3 4)))
   ((enable exist-hint-8-12-3-4 union-at-n at 
            hint-8-12-3-4-at-n 
            intersect-8-12-3-4-at-n)))

(prove-lemma ex-hint-l-g-h (rewrite)
   (implies (exist-hint-8-12-3-4 n l g h j)
            (not (lessp (exist-hint-8-12-3-4 n 
                         l g h j) (nth h j))))
   ((enable exist-hint-8-12-3-4 hint-8-12-3-4-at-n)))

(prove-lemma ex-hint-lp-gp-h-in-int-8-12-3-4 (rewrite)
   (implies (exist-hint-8-12-3-4 n lp gp h j)
            (intersect-8-12-3-4-at-n 
             (exist-hint-8-12-3-4 n lp gp h j) lp gp))
   ((enable hint-8-12-3-4-at-n exist-hint-8-12-3-4)))

(prove-lemma ex-hint-lp-gp-h-leq-h-j (rewrite)
   (implies (exist-hint-8-12-3-4 n lp gp h j)
            (not (lessp (exist-hint-8-12-3-4 n 
                  lp gp h j) (nth h j))))
   ((enable hint-8-12-3-4-at-n exist-hint-8-12-3-4)))

(prove-lemma ex-hint-not-in-g02 (rewrite)
   (implies (exist-hint-8-12-3-4 n l g h k)
            (not (union-at-n g (exist-hint-8-12-3-4 n 
                                l g h k) '(0 1 2))))
   ((enable union-at-n)
    (use (ex-hint-in-g34))))

(prove-lemma hint-wtn (rewrite) 
   (implies (and (member r (nset n))
                 (intersect-8-12-3-4-at-n r lp gp)
                 (not (lessp r (nth h j))))
            (exist-hint-8-12-3-4 n lp gp h j))
   ((enable nset exist-hint-8-12-3-4 
            hint-8-12-3-4-at-n)))

;;;;;;;;;;;;;;;;;Lemmas on hints end.

(prove-lemma lm-k-in-l7-imp (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (lg n l g)
                 (at l k 7)
                 (b1b n l g h (nth h k) j)
                 (at l j 3)
                 (union-at-n lp k '(8 9 10 11 12)))
            (exist-hint-8-12-3-4 n l g h j))
   ((enable b1b b1d)
    (use (cond-l7) (b1a-if4 (u (nth h k))))))

(prove-lemma ex-hint-neq-k-imp (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (exist-hint-8-12-3-4 n l g h j)
                 (not (equal k 
                       (exist-hint-8-12-3-4 n l g h j))))
            (intersect-8-12-3-4-at-n 
             (exist-hint-8-12-3-4 n l g h j) lp gp))
   ((enable intersect-8-12-3-4-at-n)
    (use (ex-hint-in-g34))))

(prove-lemma ex-hint-neq-k-in-l7 (rewrite)
   (implies (and (at l k 7)
                 (exist-hint-8-12-3-4 n l g h j))
            (not (equal k (exist-hint-8-12-3-4 n 
                            l g h j))))
   ((enable at union-at-n) (use (ex-hint-in-l8-12))))

(prove-lemma ex-hint-in-int-8-12-3-4-l7 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 7)
                 (exist-hint-8-12-3-4 n l g h j))
            (intersect-8-12-3-4-at-n 
             (exist-hint-8-12-3-4 n l g h j) lp gp))
   ((use (ex-hint-neq-k-imp))))

(prove-lemma ex-hint-wtn-l7 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 7)
                 (exist-hint-8-12-3-4 n l g h j))
            (exist-hint-8-12-3-4 n lp gp h j))
   ((use (hint-wtn 
          (r (exist-hint-8-12-3-4 n l g h j))))))

(prove-lemma b1b-k-in-l7-imp (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (lg n l g)
                 (at l k 7)
                 (b1b n l g h (nth h k) j)
                 (at l j 3)
                 (union-at-n lp k '(8 9 10 11 12)))
            (exist-hint-8-12-3-4 n lp gp h j))
   ((use (lm-k-in-l7-imp))))

(prove-lemma h-j-leq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l j 3)
                 (at l k 5)
                 (b0b n l h k j)
                 (union-at-n lp k '(8 9 10 11 12)))
            (not (lessp k (nth h j))))
   ((enable b0b)
    (use (l5-j-lt-h-k))))

(prove-lemma lm-lp8-then-k-in-g34 (rewrite)
   (implies (and (listp l)
                 (numberp n)
                 (equal (length l) n)
                 (mrhoi n k l g h lp gp hp)
                 (member k (nset n))
                 (lg n l g)
                 (at l k 5)
                 (at lp k 8))
            (union-at-n gp k '(3 4)))
   ((enable mrhoi at union-at-n lg lg-at-n 
            lg-2-at-n lg-3-at-n nset)))

(disable lm-lp8-then-k-in-g34)

(prove-lemma lp8-then-k-in-g34 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l k 5)
                 (at lp k 8))
            (union-at-n gp k '(3 4)))
   ((enable lm-lp8-then-k-in-g34)
    (use (lm-lp8-then-k-in-g34))))

(prove-lemma lm-k-in-g34 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (lg n lp gp)
                 (at l k 5)
                 (union-at-n lp k '(8 9 10 11 12)))
            (union-at-n gp k '(3 4)))
   ((use (un8-12-then-l8-or-l9-12))))

(prove-lemma k-in-g34 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l k 5)
                 (union-at-n lp k '(8 9 10 11 12)))
            (union-at-n gp k '(3 4)))
   ((use (lm-k-in-g34))))

(prove-lemma k-in-int (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l k 5)
                 (union-at-n lp k '(8 9 10 11 12)))
            (intersect-8-12-3-4-at-n k lp gp))
   ((enable intersect-8-12-3-4-at-n)
    (use (k-in-g34))))

(prove-lemma k-in-l5-imp (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l j 3)
                 (at l k 5)
                 (b0b n l h k j)
                 (union-at-n lp k '(8 9 10 11 12)))
            (exist-hint-8-12-3-4 n lp gp h j))
   ((use (k-in-int))))

;;;This is slow.
(prove-lemma ex-hint-in-l12 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (union-at-n l k '(8 9 10 11))
                 (exist-hint-8-12-3-4 n l g h j)
                 (at l (exist-hint-8-12-3-4 n l g h j) 12))
            (intersect-8-12-3-4-at-n 
             (exist-hint-8-12-3-4 n l g h j) lp gp))
   ((use (r-neq-k (r (exist-hint-8-12-3-4 n l g h j))))))

(prove-lemma r-neq-k-l8-11-k-in-lp8-12 (rewrite)               
   (implies (and (molws n l g h)
                 (member r (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal r k))
                 (union-at-n l r '(8 9 10 11)))
            (union-at-n lp r '(8 9 10 11)))
   ((use (m-lp-same-l (j r) (m '(8 9 10 11))))))

(prove-lemma r-eq-k-l8-11-k-in-lp8-12 (rewrite)               
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (union-at-n l k '(8 9 10 11)))
            (union-at-n lp k '(8 9 10 11 12)))
   ((enable union-at-n at mrhoi)))

(prove-lemma l8-11-k-in-lp8-12 (rewrite)               
   (implies (and (molws n l g h)
                 (member r (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (union-at-n l r '(8 9 10 11)))
            (union-at-n lp r '(8 9 10 11 12)))
   ((use (r-neq-k-l8-11-k-in-lp8-12))))

(prove-lemma hint-in-l8-11 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (exist-hint-8-12-3-4 n l g h j)
                 (union-at-n l (exist-hint-8-12-3-4 
                                n l g h j) '(8 9 10 11)))
            (intersect-8-12-3-4-at-n 
             (exist-hint-8-12-3-4 n l g h j) lp gp))
   ((enable intersect-8-12-3-4-at-n)
    (use (l8-11-k-in-gp34 
          (r (exist-hint-8-12-3-4 n l g h j))))))

(prove-lemma ex-hint-not-in-l12 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (exist-hint-8-12-3-4 n l g h j)
                 (not (at l (exist-hint-8-12-3-4 n l g h j) 12)))
            (intersect-8-12-3-4-at-n 
             (exist-hint-8-12-3-4 n l g h j) lp gp))
   ((use (hint-in-l8-11))))

(prove-lemma ex-hint-in-int-8-12-3-4-l8-11 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (union-at-n l k '(8 9 10 11))
                 (exist-hint-8-12-3-4 n l g h j))
            (intersect-8-12-3-4-at-n 
             (exist-hint-8-12-3-4 n l g h j) lp gp))
   ((use (ex-hint-not-in-l12))))

(prove-lemma ex-hint-wtn-l8-11 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (union-at-n l k '(8 9 10 11))
                 (exist-hint-8-12-3-4 n l g h j))
            (exist-hint-8-12-3-4 n lp gp h j))
   ((use (hint-wtn (r (exist-hint-8-12-3-4 n l g h j))))))

(prove-lemma k-in-l8-11-imp (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l j 3)
                 (b1b n l g h k j)
                 (union-at-n l k '(8 9 10 11)))
            (exist-hint-8-12-3-4 n lp gp h j))
   ((enable b1b)
    (use (un8-11-then-un8-12))))

(prove-lemma m-lp9-12-k-in-l8-11 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)                 
                 (union-at-n lp k '(9 10 11 12)))
            (union-at-n l k '(8 9 10 11)))
   ((enable mrhoi union-at-n at)))

(prove-lemma k-in-lp9-12-imp (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l j 3)
                 (b1b n l g h k j)
                 (union-at-n lp k '(9 10 11 12)))
            (exist-hint-8-12-3-4 n lp gp h j))
   ((use (k-in-l8-11-imp))))

(prove-lemma k-not-in-l7-imp (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l j 3)
                 (not (at l k 7))
                 (b0b n l h k j)
                 (b1b n l g h k j)
                 (union-at-n lp k '(8 9 10 11 12)))
            (exist-hint-8-12-3-4 n lp gp h j))
   ((use (k-not-in-l7-then-lp9-12-or-l5))))

(prove-lemma lm1-b1b-i-eq-k-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (lg n l g)
                 (at l j 3)
                 (b0b n l h k j)
                 (b1b n l g h k j)
                 (b1b n l g h (nth h k) j)
                 (union-at-n lp k '(8 9 10 11 12)))
            (exist-hint-8-12-3-4 n lp gp h j))
   ((use (b1b-k-in-l7-imp))))

(prove-lemma ex-hint-lp-gp-h-leq-hp-j (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (exist-hint-8-12-3-4 n lp gp h j))
            (not (lessp (exist-hint-8-12-3-4 n
                  lp gp h j) (nth hp j))))
   ((use (ex-hint-lp-gp-h-leq-h-j))))

(prove-lemma j-neq-k-then-hp-eq-h (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (exist-hint-8-12-3-4 n lp gp h j))
            (exist-hint-8-12-3-4 n lp gp hp j))
   ((use (hint-wtn (h hp) 
                   (r (exist-hint-8-12-3-4 n lp gp h j))))))

(prove-lemma lm-b1b-i-eq-k-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (not (equal j k))
                 (lg n l g)
                 (b0b n l h k j)
                 (b1b n l g h k j)
                 (b1b n l g h (nth h k) j)
                 (at l j 3)
                 (union-at-n lp k '(8 9 10 11 12)))
            (exist-hint-8-12-3-4 n lp gp hp j))
   ((use (lm1-b1b-i-eq-k-j-neq-k))))

(prove-lemma b1b-i-eq-k-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (not (equal j k))
                 (lg n l g)
                 (b0b n l h k j)
                 (b1b n l g h k j)
                 (b1b n l g h (nth h k) j))
            (b1b n lp gp hp k j))
   ((enable b1b)
    (use (lm-b1b-i-eq-k-j-neq-k))))

(prove-lemma b1b-i-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1b n l g h k k))
            (b1b n lp gp hp k k))
   ((enable b1b union-at-n at)))

;;;I wonder if (b1d n l h i) is 
;;;better than (b1d n l h k).
(prove-lemma b1b-i-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (lg n l g)
                 (b0b n l h k j)
                 (b1b n l g h k j)
                 (b1b n l g h (nth h k) j))
            (b1b n lp gp hp k j))
   ((use (b1b-i-eq-k-j-neq-k))))

;;;I wonder why the following two do not imply 
;;;lm-b1b-i-neq-k-j-eq-k.
;;;(prove-lemma k-not-in-l3 (rewrite)
;;;   (implies (and (molws n l g h)
;;;                 (member i (nset n))
;;;                 (member k (nset n))
;;;                 (mrhoi n k l g h lp gp hp)
;;;                 (not (equal i k))
;;;                 (lg n l g)
;;;                 (at lp k 3)
;;;                 (not (at l k 3))
;;;                 (union-at-n l i '(8 9 10 11 12)))
;;;         (exist-hint-8-12-3-4 n lp gp hp k)))
;;;
;;;(prove-lemma k-in-l3 (rewrite)
;;;   (implies (and (molws n l g h)
;;;                 (member i (nset n))
;;;                 (member k (nset n))
;;;                 (mrhoi n k l g h lp gp hp)
;;;                 (at l k 3)
;;;                 (at lp k 3)
;;;                 (union-at-n l i '(8 9 10 11 12)))
;;;         (exist-hint-8-12-3-4 n lp gp hp k)))
;;;
;;;(prove-lemma lm-b1b-i-neq-k-j-eq-k (rewrite)
;;;   (implies (and (molws n l g h)
;;;                 (member i (nset n))
;;;                 (member k (nset n))
;;;                 (mrhoi n k l g h lp gp hp)
;;;                 (not (equal i k))
;;;                 (lg n l g)
;;;                 (at lp k 3)
;;;                 (union-at-n l i '(8 9 10 11 12)))
;;;         (exist-hint-8-12-3-4 n lp gp hp k)))

(prove-lemma ex-hint-leq-h-k (rewrite)
   (implies (exist-hint-8-12-3-4 n l g h k)
            (not (lessp (exist-hint-8-12-3-4 n l g h k) 
                        (nth h k)))))

(prove-lemma h-k-leq-sub1-ex-hint (rewrite)
   (implies (and (exist-hint-8-12-3-4 n l g h k)
                 (not (equal (nth h k) 
                       (exist-hint-8-12-3-4 n l g h k))))
            (not (lessp (sub1 (exist-hint-8-12-3-4 
                                n l g h k)) (nth h k))))
   ((enable at)
    (use (ex-hint-leq-h-k))))



(prove-lemma ex-hint-neq-h-k (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (exist-hint-8-12-3-4 n l g h k)
                 (at l k 3)
                 (at lp k 3))
            (not (equal (nth h k) 
                        (exist-hint-8-12-3-4 n l g h k))))
   ((use (ex-hint-not-in-g02))))

(prove-lemma lm-hp-k-leq-ex-l-g-h (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 3)
                 (at lp k 3)
                 (exist-hint-8-12-3-4 n l g h k))
            (not (lessp (sub1 (exist-hint-8-12-3-4 n 
                               l g h k)) (nth h k))))
    ((use (h-k-leq-sub1-ex-hint))))

(prove-lemma  ex-cond-l3 (rewrite)                 
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 3)
                 (exist-hint-8-12-3-4 n l g h k)
                 (not (lessp (sub1 (exist-hint-8-12-3-4 n 
                                    l g h k)) (nth h k))))
            (not (lessp (exist-hint-8-12-3-4 n l g h k) 
                        (nth hp k))))
   ((use (cond-l3 (i (exist-hint-8-12-3-4 n l g h k))))))

(prove-lemma hp-k-leq-ex-l-g-h (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 3)
                 (at lp k 3)
                 (exist-hint-8-12-3-4 n l g h k))
            (not (lessp (exist-hint-8-12-3-4 n l g h k) 
                        (nth hp k))))
   ((use (hint-member (j k)))))

(prove-lemma ex-hint-neq-k-in-l3 (rewrite)
   (implies (and (at l k 3)
                 (union-at-n l (exist-hint-8-12-3-4 n l g h k) 
                               '(8 9 10 11 12)))
             (not (equal k (exist-hint-8-12-3-4 n l g h k))))
   ((enable at union-at-n) (use (ex-hint-in-l8-12))))

;;;This is successfully proved 
;;;by m-gp-same-g and m-lp-same-l.
;;;This is successfully proved by ex-hint-neq-k-imp, 
;;;ex-hint-neq-k-in-l3 and ex-hint-in-l8-12.
(prove-lemma ex-hint-l-g-h-in-int-8-12-3-4 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 3)
                 (exist-hint-8-12-3-4 n l g h k))
            (intersect-8-12-3-4-at-n 
             (exist-hint-8-12-3-4 n l g h k) lp gp))
   ((use (ex-hint-neq-k-imp))))

(prove-lemma ex-l-g-h-k-in-l3 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 3)
                 (at lp k 3)
                 (exist-hint-8-12-3-4 n l g h k))
            (exist-hint-8-12-3-4 n lp gp hp k))
   ((use (hint-wtn (h hp) (j k) 
                   (r (exist-hint-8-12-3-4 n l g h k))))))

(prove-lemma lm-k-in-l3 (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 3)
                 (at lp k 3)
                 (union-at-n l i '(8 9 10 11 12))
                 (b1b n l g h i k))
            (exist-hint-8-12-3-4 n lp gp hp k))
   ((enable b1b)
    (use (ex-l-g-h-k-in-l3))))

(prove-lemma k-in-l3 (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (at l k 3)
                 (b1b n l g h i k))
            (b1b n lp gp hp i k))
   ((enable b1b)
    (use (lm-k-in-l3))))

(prove-lemma hp-k-leq-i (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 2)
                 (at lp k 3))
            (not (lessp i (nth hp k))))
   ((enable mrhoi at)))

(prove-lemma b1b-u-neq-k (rewrite)
   (implies (and (member u (nset n))
                 (member k (nset n))
                 (lg n l g)
                 (at g u 4)
                 (at l k 2))
            (not (equal k u)))
   ((use (u-if4))))

(prove-lemma lm-u-in-int-8-12-3-4 (rewrite)
   (implies (and (molws n l g h)
                 (member u (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l k 2)
                 (at g u 4)
                 (union-at-n lp u '(8 9 10 11 12)))
            (intersect-8-12-3-4-at-n u lp gp))
   ((enable intersect-8-12-3-4-at-n)
    (use (b1b-u-neq-k))))

(prove-lemma k-neq-u-in-lp8-12 (rewrite)
   (implies (and (molws n l g h)
                 (member u (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal u k))
                 (lg n l g)
                 (at g u 4))
            (union-at-n lp u '(8 9 10 11 12)))
   ((use (b1a-if4))))

(prove-lemma lm1-u-in-int-8-12-3-4 (rewrite)
   (implies (and (molws n l g h)
                 (member u (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l k 2)
                 (at g u 4))
            (union-at-n lp u '(8 9 10 11 12)))
   ((use (k-neq-u-in-lp8-12))))

(prove-lemma u-in-int-8-12-3-4 (rewrite)
   (implies (and (molws n l g h)
                 (member u (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l k 2)
                 (at g u 4))
            (intersect-8-12-3-4-at-n u lp gp))
   ((use (lm-u-in-int-8-12-3-4))))

;;;I wonder why the following does not trigger 
;;;molws-ln-lp, molws-ln-gp.
;;;(prove-lemma h-i-in-g34-imp (rewrite)
;;;   (implies (and (molws n l g h)
;;;                 (member k (nset n))
;;;                 (mrhoi n k l g h lp gp hp)
;;;                 (member (nth h i) (nset n))
;;;                 (lg n l g)
;;;                 (at l k 2)
;;;                 (at lp k 3)
;;;                 (at g (nth h i) 4))
;;;            (exist-hint-8-12-3-4 n lp gp hp k)))
;;;although
;;;(prove-lemma h-i-in-g34-imp (rewrite)
;;;   (implies (and (member (nth h i) (nset n))
;;;                 (molws n l g h)
;;;                 (member k (nset n))
;;;                 (mrhoi n k l g h lp gp hp)
;;;                 (lg n l g)
;;;                 (at l k 2)
;;;                 (at lp k 3)
;;;                 (at g (nth h i) 4))
;;;            (exist-hint-8-12-3-4 n lp gp hp k)))
;;;does.

(prove-lemma h-i-in-g34-imp (rewrite)
   (implies (and (member (nth h i) (nset n))
                 (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l k 2)
                 (at lp k 3)
                 (at g (nth h i) 4))
            (exist-hint-8-12-3-4 n lp gp hp k))
   ((use (hint-wtn (h hp) (j k) (r (nth h i))))))

(prove-lemma i-not-in-g34 (rewrite)
   (implies (and (not (union-at-n g i '(3 4)))
                 (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l k 2)
                 (at lp k 3)
                 (b1c n l g h i)
                 (union-at-n l i '(8 9 10 11 12)))
            (exist-hint-8-12-3-4 n lp gp hp k))
   ((enable b1c)
    (use (h-i-in-g34-imp))))

(prove-lemma i-in-int-8-12-3-4 (rewrite)
   (implies (and (union-at-n g i '(3 4))
                 (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (union-at-n l i '(8 9 10 11 12)))
            (intersect-8-12-3-4-at-n i lp gp))
   ((enable intersect-8-12-3-4-at-n)))

(prove-lemma i-in-g34 (rewrite)
   (implies (and (union-at-n g i '(3 4))
                 (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (at l k 2)
                 (at lp k 3)
                 (union-at-n l i '(8 9 10 11 12)))
            (exist-hint-8-12-3-4 n lp gp hp k))
   ((use (hint-wtn (h hp) (j k) (r i)))))

(prove-lemma k-in-l2 (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (not (equal i k))
                 (lg n l g)
                 (at l k 2)
                 (at lp k 3)
                 (b1c n l g h i)
                 (union-at-n l i '(8 9 10 11 12)))
            (exist-hint-8-12-3-4 n lp gp hp k))
   ((use (i-not-in-g34))))

(prove-lemma lp3-then-l3-or-l2 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (at l k 3))
                 (at lp k 3))
            (at l k 2))
   ((enable mrhoi at)))

(prove-lemma lm-k-not-in-l3 (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (not (equal i k))
                 (lg n l g)
                 (not (at l k 3))
                 (at lp k 3)
                 (b1c n l g h i)
                 (union-at-n l i '(8 9 10 11 12)))
            (exist-hint-8-12-3-4 n lp gp hp k))
   ((use (k-in-l2))))

(prove-lemma k-not-in-l3 (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (not (equal i k))
                 (lg n l g)
                 (not (at l k 3))
                 (b1b n l g h i k)
                 (b1c n l g h i))
            (b1b n lp gp hp i k))
   ((enable b1b)
    (use (lm-k-not-in-l3))))

(prove-lemma b1b-i-neq-k-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (not (equal i k))
                 (lg n l g)
                 (b1b n l g h i k)
                 (b1c n l g h i))
            (b1b n lp gp hp i k))
   ((use (k-not-in-l3))))

(prove-lemma lm-i-neq-k-in-int-8-12-3-4 (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (lg n l g)
                 (at g i 4))
            (intersect-8-12-3-4-at-n i lp gp))
   ((enable intersect-8-12-3-4-at-n)
    (use (k-neq-u-in-lp8-12 (u i)))))

(prove-lemma i-neq-k-in-int-8-12-3-4 (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (union-at-n l i '(8 9 10 11 12))
                 (lg n l g)
                 (at l (exist-hint-8-12-3-4 n l g h j) 12)
                 (b3a l g 
                  (exist-hint-8-12-3-4 n l g h j) i))
            (intersect-8-12-3-4-at-n i lp gp))
   ((enable b3a)
    (use (lm-i-neq-k-in-int-8-12-3-4))))

(prove-lemma h-j-leq-i (rewrite)
   (implies (and (union-at-n l i '(8 9 10 11 12))
                 (exist-hint-8-12-3-4 n l g h j)
                 (at l (exist-hint-8-12-3-4 n l g h j) 12)
                 (b2a l (exist-hint-8-12-3-4 n l g h j) i))
            (not (lessp i (nth h j))))
   ((enable b2a)
    (use (l12-then-un10-12 
          (u (exist-hint-8-12-3-4 n l g h j))))))

(prove-lemma i-neq-k-ex-hint-in-l12 (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (lg n l g)
                 (union-at-n l i '(8 9 10 11 12))
                 (exist-hint-8-12-3-4 n l g h j)
                 (at l (exist-hint-8-12-3-4 n l g h j) 12)
                 (b2a l (exist-hint-8-12-3-4 n l g h j) i)
                 (b3a l g 
                  (exist-hint-8-12-3-4 n l g h j) i))
            (exist-hint-8-12-3-4 n lp gp h j))
   ((use (hint-wtn (r i)))))

(prove-lemma i-neq-k-ex-hint-not-in-l12 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (exist-hint-8-12-3-4 n l g h j)
                 (not (at l 
                       (exist-hint-8-12-3-4 n l g h j) 12)))
            (exist-hint-8-12-3-4 n lp gp h j))
   ((use (hint-wtn (r (exist-hint-8-12-3-4 n l g h j))))))

(prove-lemma lm1-b1b-i-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (lg n l g)
                 (union-at-n l i '(8 9 10 11 12))
                 (exist-hint-8-12-3-4 n l g h j)
                 (b2a l (exist-hint-8-12-3-4 n l g h j) i)
                 (b3a l g 
                  (exist-hint-8-12-3-4 n l g h j) i))
            (exist-hint-8-12-3-4 n lp gp h j))
   ((use (i-neq-k-ex-hint-in-l12))))

(prove-lemma lm-b1b-i-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (not (equal j k))
                 (lg n l g)
                 (union-at-n l i '(8 9 10 11 12))
                 (b2a l (exist-hint-8-12-3-4 n l g h j) i)
                 (b3a l g (exist-hint-8-12-3-4 n l g h j) i)
                 (exist-hint-8-12-3-4 n l g h j))
            (exist-hint-8-12-3-4 n lp gp hp j))
   ((use (lm1-b1b-i-j-neq-k))))

(prove-lemma b1b-i-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (not (equal j k))
                 (lg n l g)
                 (b1b n l g h i j)
                 (b2a l (exist-hint-8-12-3-4 n l g h j) i)
                 (b3a l g 
                  (exist-hint-8-12-3-4 n l g h j) i))
            (b1b n lp gp hp i j))
   ((enable b1b)
    (use (lm-b1b-i-j-neq-k))))

(prove-lemma b1b-i-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (not (equal i k))
                 (lg n l g)
                 (b0b n l h i j)
                 (b1b n l g h i j)
                 (b1c n l g h i)
                 (b2a l (exist-hint-8-12-3-4 n l g h j) i)
                 (b3a l g 
                  (exist-hint-8-12-3-4 n l g h j) i))
            (b1b n lp gp hp i j))
   ((use (b1b-i-j-neq-k))))


;;;I wonder if (b1d n l h i) and 
;;;(b1d n l h j) are better than
;;;(b1d n l h k).
;;;(b1b n l g h (nth h i) j) and (b1b n l g h (nth h k) j).
;;;What about (b2a l (exist-hint-8-12-3-4 n l g h j) i)
;;;           (b3a l g (exist-hint-8-12-3-4 n l g h j) i) ?

(prove-lemma mrho-preserves-b1b ()
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (lg n l g)
                 (b0b n l h i j)
                 (b1b n l g h (nth h k) j)
                 (b1b n l g h i j)
                 (b1c n l g h i)
                 (b2a l (exist-hint-8-12-3-4 n l g h j) i)
                 (b3a l g 
                  (exist-hint-8-12-3-4 n l g h j) i))
            (b1b n lp gp hp i j))
   ((use (b1b-i-neq-k) (b1b-i-eq-k))))


;;;;;;;;;;;;;   b1c   ;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;common in mole and atom.
(prove-lemma not-g34-then-not-g4 (rewrite)
   (implies (not (union-at-n g i '(3 4)))
            (not (at g i 4)))
   ((enable union-at-n at)))

(prove-lemma contra-if4 (rewrite)
   (implies (and (member j (nset n))
                 (lg n l g)
                 (at g j 4))
            (union-at-n l j '(9 10 11 12)))
   ((enable lg lg-at-n lg-3-at-n union-at-n at nset)))
;;;;;;;;;;;;;;common in mole and atom end.

(prove-lemma lp8-not-l5-then-l7 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (at l k 5))
                 (at lp k 8))
            (at l k 7))
   ((enable at mrhoi)))

(prove-lemma lp8-not-g34-then-k-in-l7 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at lp k 8)
                 (union-at-n lp k '(8 9 10 11 12))
                 (not (union-at-n gp k '(3 4))))
            (at l k 7))
   ((use (lp8-not-l5-then-l7))))

(prove-lemma lm-k-in-l7 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (lg n lp gp)
                 (union-at-n lp k '(8 9 10 11 12))
                 (not (union-at-n gp k '(3 4))))
            (at l k 7))
   ((use (un8-12-then-l8-or-l9-12))))

(prove-lemma k-in-l7 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (union-at-n lp k '(8 9 10 11 12))
                 (not (union-at-n gp k '(3 4))))
            (at l k 7))
   ((use (lm-k-in-l7))))

(prove-lemma h-k-cond-l7 (rewrite)
   (implies (and (molws n l g h)                 
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 7)
                 (union-at-n lp k '(8 9 10 11 12)))
            (equal (nth hp k) (nth h k)))
   ((enable at union-at-n mrhoi)))

(prove-lemma lm-h-k-g4 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (lg n l g)
                 (at l k 7)
                 (union-at-n lp k '(8 9 10 11 12)))
            (and (member (nth hp k) (nset n))
                 (at g (nth hp k) 4)))
   ((enable b1d)
    (use (h-k-cond-l7))))

(prove-lemma h-k-g4 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (lg n l g)
                 (union-at-n lp k '(8 9 10 11 12))
                 (not (union-at-n gp k '(3 4))))
            (and (member (nth hp k) (nset n))
                 (at g (nth hp k) 4)))
   ((use (lm-h-k-g4))))

(prove-lemma lm1-i-eq-k-then-h-k-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (lg n l g)
                 (at l k 7)
                 (at g (nth hp k) 4))
            (not (at hp k k)))
   ((enable at b1d union-at-n)
    (use (contra-if4 (j (nth hp k))))))

;;;Need k-in-l7.
(prove-lemma lm-i-eq-k-then-h-k-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (lg n l g)
                 (at l k 7)
                 (union-at-n lp k '(8 9 10 11 12))
                 (not (union-at-n gp k '(3 4))))
            (not (at hp k k)))
   ((use (lm1-i-eq-k-then-h-k-neq-k))))

(prove-lemma i-eq-k-then-h-k-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (lg n l g)
                 (union-at-n lp k '(8 9 10 11 12))
                 (not (union-at-n gp k '(3 4))))
            (not (at hp k k)))
   ((use (h-k-g4))))

(prove-lemma b1c-i-eq-k-hp-k-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (not (at hp k k))
                 (lg n l g)
                 (union-at-n lp k '(8 9 10 11 12))
                 (not (union-at-n gp k '(3 4))))
            (and (member (nth hp k) (nset n))
                 (at gp (nth hp k) 4)))
   ((enable at)
    (use (h-k-g4))))

(prove-lemma b1c-i-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (lg n l g))
            (b1c n lp gp hp k))
   ((enable b1c)
    (use (b1c-i-eq-k-hp-k-neq-k))))

(prove-lemma l9-11-then-in-lp9-12 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (at l k 12))
                 (union-at-n l k '(9 10 11 12)))
            (union-at-n lp k '(9 10 11 12)))
   ((enable union-at-n at mrhoi)))

(prove-lemma k-in-lp9-12 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at g k 4)
                 (not (at l k 12)))
             (union-at-n lp k '(9 10 11 12)))
   ((use (contra-if4 (j k)))))


(prove-lemma lm-k-not-in-l12-imp (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (lg n lp gp)
                 (at g k 4)
                 (not (at l k 12)))
            (at gp k 4))
   ((disable mrho-preserves-lg)
    (use (k-in-lp9-12))))

(prove-lemma k-not-in-l12-imp (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at g k 4)
                 (not (at l k 12)))
            (at gp k 4))
   ((use (lm-k-not-in-l12-imp))))

(prove-lemma k-not-in-l12 (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b3a l g k i)
                 (union-at-n l i '(8 9 10 11 12))
                 (not (union-at-n g i '(3 4))))
            (not (at l k 12)))
   ((enable b3a)
    (use (un8-12-then-un5-12))))

(prove-lemma lm1-b1c-i-neq-k-h-i-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (equal (nth h i) k)
                 (lg n l g)
                 (b1c n l g h i)
                 (b3a l g (nth h i) i)
                 (union-at-n l i '(8 9 10 11 12))
                 (not (union-at-n g i '(3 4))))
            (at gp k 4))
   ((enable b1c)
    (use (k-not-in-l12))))

(prove-lemma lm-b1c-i-neq-k-h-i-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at h i k)
                 (lg n l g)
                 (b1c n l g h i)
                 (b3a l g (nth h i) i)
                 (union-at-n l i '(8 9 10 11 12))
                 (not (union-at-n g i '(3 4))))
            (and (member (nth h i) (nset n))
                 (at gp (nth h i) 4)))
   ((enable at)
    (use (lm1-b1c-i-neq-k-h-i-eq-k))))

(prove-lemma b3a-h-rholemma (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (b3a l g (nth h i) i))
            (b3a l g (nth hp i) i)))

;;;m-l-same-lp and m-gp-same-g are used.
(prove-lemma b1c-i-neq-k-h-i-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (at h i k)
                 (lg n l g)
                 (b1c n l g h i)
                 (b3a l g (nth h i) i))
            (b1c n lp gp hp i))
   ((enable b1c)
    (use (lm-b1c-i-neq-k-h-i-eq-k))))

(prove-lemma lm-b1c-i-h-i-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (at h i k))
                 (b1c n l g h i)
                 (union-at-n l i '(8 9 10 11 12))
                 (not (union-at-n g i '(3 4))))
            (and (member (nth h i) (nset n))
                 (at gp (nth h i) 4)))
   ((enable b1c at)
    (use (g-mrholemma (j (nth h i))))))

(prove-lemma b1c-i-h-i-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (not (at h i k))
                 (b1c n l g h i))
            (b1c n lp gp hp i))
   ((enable b1c)
    (use (lm-b1c-i-h-i-neq-k))))

(prove-lemma b1c-i-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (lg n l g)
                 (b1c n l g h i)
                 (b3a l g (nth h i) i))
            (b1c n lp gp hp i))
   ((use (b1c-i-h-i-neq-k))))

(prove-lemma mrho-preserves-b1c ()
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1d n l h k)
                 (lg n l g)
                 (b1c n l g h i)
                 (b3a l g (nth h i) i))
            (b1c n lp gp hp i))
   ((use (b1c-i-neq-k))))


;;;;;;;;;;;;;   b1d   ;;;;;;;;;;;;;;;;

(prove-lemma remainder-quotient (rewrite)
  (equal (remainder x (add1 x))
         (fix x)))

(prove-lemma lm1-member-remainder (rewrite)
  (implies (not (lessp x n))
           (not (member (add1 x)  (nset (sub1 n)))))
   ((enable nset)))

(prove-lemma lm-member-remainder (rewrite)
   (implies (member (add1 x) (nset (sub1 n)))
            (member (add1 (remainder x n)) (nset (sub1 n))))
   ((enable nset)))

(prove-lemma member-remainder (rewrite)
   (implies (member j (nset n))
            (member (add1 (remainder (sub1 j) n)) (nset n)))
   ((enable nset)))

(prove-lemma one-nset (rewrite)
   (implies (not (zerop n))
            (member 1 (nset n)))
   ((enable nset)))

(prove-lemma lm-b1d-i-eq-k (rewrite)
   (implies (and (listp l)
                 (listp h)
                 (numberp n)
                 (numberp (nth h k))
                 (equal (length l) n)
                 (equal (length h) n)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp) 
                 (b1d n l h k))
            (b1d n lp hp k))
   ((enable mrhoi b1d at)
    (use (member-remainder (j (nth h k))))))

(prove-lemma b1d-i-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp) 
                 (b1d n l h k))
            (b1d n lp hp k))
   ((disable b1d)
    (enable lm-b1d-i-eq-k)
    (use (lm-b1d-i-eq-k))))

(prove-lemma b1d-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp) 
                 (not (equal i k))
                 (b1d n l h i))
            (b1d n lp hp i))
   ((enable b1d)))

(prove-lemma mrhoi-preserves-b1d (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp) 
                 (b1d n l h i))
            (b1d n lp hp i))
   ((disable b1d)
    (use (b1d-neq-k))))



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;   b2.ev   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;   b2a   ;;;;;;;;;;;;;;;;

;* i-eq-k-j-neq-k

(prove-lemma j-lt-h-k (rewrite)                    
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))             
                 (mrhoi n k l g h lp gp hp)
                 (lessp j k)
                 (at l k 9)
                 (union-at-n lp k '(10 11 12)))
             (lessp j (nth h k)))
    ((enable mrhoi union-at-n at)))

(prove-lemma lm-case-k-in-l9 (rewrite)                    
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))             
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (lessp j k)
                 (b2b l h k j)
                 (at l k 9)
                 (lessp j (nth h k))
                 (union-at-n lp k '(10 11 12)))
             (not (union-at-n l j '(5 6 7 8 9 10 11 12))))
   ((enable b2b)))

;;;In the rewrite rule a set of hypotheses is replaced
;;;by anther set of formulas. Thus if in a proof 
;;;intended beforehand there is a formula belonging to 
;;;more than one set of hypotheses which are expected to 
;;;be replaced, Bmp is very likely to be unsuccessful.
;;;If j is not equal to k and the k's entry in l is 
;;;between 10 and 12, then the j's entry in lp is not 
;;;between 5 and 12.
(prove-lemma case-k-in-l9 (rewrite)                    
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))             
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (lessp j k)
                 (b2b l h k j)
                 (at l k 9)
                 (union-at-n lp k '(10 11 12)))
             (not (union-at-n lp j '(5 6 7 8 9 10 11 12))))
    ((use (lm-case-k-in-l9) (j-lt-h-k))))

;;;need un10-11-then-un10-12.
(prove-lemma case-k-in-l10-11 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))             
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (lessp j k)
                 (b2a l k j)
                 (union-at-n l k '(10 11)))
             (not (union-at-n lp j '(5 6 7 8 9 10 11 12))))
   ((enable b2a)))

(prove-lemma k-in-l10-11-or-l9 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))             
                 (mrhoi n k l g h lp gp hp)
                 (union-at-n lp k '(10 11 12))
                 (not (union-at-n l k '(10 11))))
            (at l k 9))
   ((enable mrhoi union-at-n at)))

(prove-lemma lm-b2a-i-eq-k-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (lessp j k)
                 (lg n l g)
                 (b2a l k j)
                 (b2b l h k j)
                 (union-at-n lp k '(10 11 12)))
             (not (union-at-n lp j '(5 6 7 8 9 10 11 12))))
  ((use (k-in-l10-11-or-l9))))

;;;I proved
;;;(prove-lemma lm-b2a-i-eq-k-j-neq-k (rewrite)
;;;   (implies (and (molws n l g h)
;;;                 (member j (nset n))
;;;                 (member k (nset n))
;;;                 (mrhoi n k l g h lp gp hp)
;;;                 (not (equal j k))
;;;                 (lessp j k)
;;;                 (lg n l g)
;;;                 (b2a l k j)
;;;                 (b2b l h k j)
;;;                 (union-at-n lp k '(10 11 12)))
;;;             (not (union-at-n l j '(5 6 7 8 9 10 11 12)))))
;;;and tried to prove the following lemma counting on 
;;;m-lp-same-l, but it was unsuccessful.

(prove-lemma b2a-i-eq-k-j-neq-k (rewrite)      
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (lessp j k)
                 (lg n l g)
                 (b2b l h k j)
                 (b2a l k j))
            (b2a lp k j))
   ((enable b2a) (use (lm-b2a-i-eq-k-j-neq-k))  ))

;* i-neq-k-j-eq-k

;;;If the k's entry in l is not 4 and 
;;;the k's entry in lp is between 5 and 7, then
;;;the k's entry in l is between 5 and 7.
(prove-lemma m-k-in-lp5-7-not-l4-then-l5-7(rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (at l k 4))
                 (union-at-n lp k '(5 6 7)))
            (union-at-n l k '(5 6 7)))
   ((enable union-at-n at mrhoi)))

;;;If the k's entry in lp is between 5 and 7 then 
;;;the k's entry in l is  certainly between 5 and 12.
(prove-lemma m-k-in-lp5-7-then-l5-11 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (at l k 4))
                 (union-at-n lp k '(5 6 7)))
            (union-at-n l k '(5 6 7 8 9 10 11)))
   ((use (m-k-in-lp5-7-not-l4-then-l5-7))))

;;;If the k's entry in lp is 8 then k's entry 
;;;in l is either 5 or 7.
(prove-lemma m-lp8-k-in-l57 (rewrite)   
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at lp k 8))
            (union-at-n l k '(5 7)))
   ((enable mrhoi union-at-n at)))

;;;If the k's entry in lp is 8,
;;;then the k's entry in l is between 5 and 11.
(prove-lemma m-k-in-lp8-then-l5-11 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at lp k 8))
            (union-at-n l k '(5 6 7 8 9 10 11)))
   ((use (un57-then-un5-11) (m-lp8-k-in-l57))))

;;;If the k's entry in lp is between 9 and 12,
;;;then the k's entry in l is between 5 and 12.
(prove-lemma m-k-in-lp9-12-then-l5-11 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (union-at-n lp k '(9 10 11 12)))
            (union-at-n l k '(5 6 7 8 9 10 11)))
   ((use (m-lp9-12-k-in-l8-11) (un8-11-then-un5-11))))

;;;If the k's entry in l is 4 an the k's entry in lp is
;;;between 5 and 12, then the k's entry in l is 
;;;between 5 and 11.
(prove-lemma  m-k-in-l5-11 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (at l k 4))
                 (union-at-n lp k '(5 6 7 8 9 10 11 12)))
            (union-at-n l k '(5 6 7 8 9 10 11)))
   ((use (k-in-lp5-7-or-lp8-or-lp9-12))))

(prove-lemma m-k-not-in-l4 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (at l k 4))
                 (not (union-at-n l k '(5 6 7 8 9 10 11 12))))
            (not (union-at-n lp k '(5 6 7 8 9 10 11 12))))
   ((use (un5-11-then-un5-12) (m-k-in-l5-11))))

(prove-lemma m-k-not-in-lp5-12 (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))             
                 (mrhoi n k l g h lp gp hp)
                 (b1a l i k)
                 (union-at-n l i '(10 11 12))
                 (not (union-at-n l k '(5 6 7 8 9 10 11 12))))
            (not (union-at-n lp k '(5 6 7 8 9 10 11 12))))
   ((enable b1a)
    (use (un10-12-then-un8-12) (m-k-not-in-l4))))

(prove-lemma lm-b2a-i-neq-k-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (lessp k i)
                 (b1a l i k)
                 (b2a l i k)
                 (union-at-n lp i '(10 11 12)))
            (not (union-at-n lp k '(5 6 7 8 9 10 11 12))))
   ((enable b2a) (use (m-k-not-in-lp5-12))))

(prove-lemma b2a-i-neq-k-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (lessp k i)
                 (b1a l i k)
                 (b2a l i k))
            (b2a lp i k))
    ((enable b2a) (use (lm-b2a-i-neq-k-j-eq-k))))

;* i-j-neq-k-neq-k

(prove-lemma b2a-i-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (not (equal j k))
                 (lessp j i)
                 (b2a l i j))
            (b2a lp i j))
   ((enable b2a)))

(prove-lemma b2a-i-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (lessp j i)
                 (b1a l i j)
                 (b2a l i j)
                 (b2b l h i j))
            (b2a lp i j))
   ((use (b2a-i-j-neq-k) (b2a-i-neq-k-j-eq-k))))

(prove-lemma b2a-i-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lessp j k)
                 (lg n l g)
                 (b2a l k j)
                 (b2b l h k j))
            (b2a lp k j))
   ((use (b2a-i-eq-k-j-neq-k))))

(prove-lemma mrho-preserves-b2a ()
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lessp j i)
                 (lg n l g)
                 (b1a l i j)
                 (b2a l i j)
                 (b2b l h i j))
            (b2a lp i j))
   ((use (b2a-i-neq-k) (b2a-i-eq-k))))



;;;;;;;;;;;;;   b2b   ;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;Common in atom and mole.
(prove-lemma l9-then-un8-12 (rewrite)
   (implies (at l i 9)
            (union-at-n l i '(8 9 10 11 12)))
   ((enable at union-at-n)))
;;;;;;;;;;;;;;Common in atom and mole end.

(prove-lemma lg-nth-h-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at h k j)
                 (union-at-n g (nth h k) '(0 1)))
            (not (union-at-n l j '(5 6 7 8 9 10 11 12))))
   ((enable at) (use (if1))))

(prove-lemma l9-g01 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at h k j)
                 (at l k 9)
                 (at lp k 9))
             (union-at-n g (nth h k) '(0 1)))
   ((enable mrhoi at)))

(prove-lemma l9-nth-h-k-eq-j (rewrite)
   (implies (and (at h k j)
                 (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l k 9)
                 (at lp k 9))
            (not (union-at-n l j '(5 6 7 8 9 10 11 12))))
   ((use (l9-g01) (lg-nth-h-k))))

(prove-lemma lm-j-not-in-l5-12 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lessp j k)
                 (lg n l g)
                 (b2b l h k j)
                 (at l k 9)
                 (at lp k 9)
                 (lessp (sub1 j) (nth h k)))
            (not (union-at-n l j '(5 6 7 8 9 10 11 12))))
   ((enable b2b)
    (use (nth-k-lt-j-or-eq-j) (l9-nth-h-k-eq-j))))

(prove-lemma  cond-l9 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 9)
                 (lessp j (nth hp k)))
            (lessp (sub1 j) (nth h k)))
   ((enable mrhoi at)))

(prove-lemma j-not-in-l5-12 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lessp j k)
                 (lg n l g)
                 (b2b l h k j)
                 (at l k 9)
                 (at lp k 9)
                 (lessp j (nth hp k)))
            (not (union-at-n l j '(5 6 7 8 9 10 11 12))))
   ((use (lm-j-not-in-l5-12) (cond-l9))))

(prove-lemma k-in-l9 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at lp k 9)
                 (lessp j (nth hp k)))
            (at l k 9))
   ((enable mrhoi at)))

;;;The order of the hints if crucial.
(prove-lemma lm-b2b-i-eq-k-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (lessp j k)
                 (lg n l g)
                 (b2b l h k j)
                 (at lp k 9)
                 (lessp j (nth hp k)))
            (not (union-at-n lp j '(5 6 7 8 9 10 11 12))))
    ((use (j-not-in-l5-12) (k-in-l9))))

(prove-lemma b2b-i-eq-k-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (lessp j k)
                 (lg n l g)
                 (b2b l h k j))
            (b2b lp hp k j))
   ((enable b2b) (use (lm-b2b-i-eq-k-j-neq-k))))

(prove-lemma b2b-i-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lessp j k)
                 (lg n l g)
                 (b2b l h k j))
            (b2b lp hp k j))
   ((use (b2b-i-eq-k-j-neq-k))))

(prove-lemma not-k-in-l5-12-imp (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1a l i k)
                 (at l i 9)
                 (not (union-at-n l k '(5 6 7 8 9 10 11 12))))
            (not (union-at-n lp k '(5 6 7 8 9 10 11 12))))
   ((enable b1a)
    (use (l9-then-un8-12) (m-k-not-in-l4))))

;;;The order of hyptheses is crucial.
(prove-lemma lm-b2b-i-neq-k-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (lessp k i)
                 (b1a l i k)
                 (b2b l h i k)
                 (at l i 9)
                 (lessp k (nth h i)))
            (not (union-at-n lp k '(5 6 7 8 9 10 11 12))))
   ((enable b2b) (use (not-k-in-l5-12-imp))))

(prove-lemma b2b-i-neq-k-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (lessp k i)
                 (b1a l i k)
                 (b2b l h i k))
            (b2b lp hp i k))
   ((enable b2b) (use (lm-b2b-i-neq-k-j-eq-k))))

;;;The position of (member k (nset n)) is 
;;;crucial to trigger rholemmas.
(prove-lemma b2b-i-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (not (equal j k))
                 (lessp j i)
                 (b2b l h i j))
            (b2b lp hp i j))
   ((enable b2b)))

(prove-lemma b2b-i-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (lessp j i)
                 (b1a l i j)
                 (b2b l h i j))
            (b2b lp hp i j))
   ((use (b2b-i-j-neq-k) (b2b-i-neq-k-j-eq-k))))

(prove-lemma mrho-preserves-b2b ()
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lessp j i)
                 (lg n l g)
                 (b1a l i j)
                 (b2b l h i j))
            (b2b lp hp i j))
   ((use (b2b-i-neq-k) (b2b-i-eq-k))))





;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;   b3.ev   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;   b3a   ;;;;;;;;;;;;;;;;

;* i-neq-k-j-eq-k

(prove-lemma  lm-b3a-k-in-l9-11 (rewrite)                
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b3a l g i k)
                 (at l i 12)
                 (union-at-n l k '(5 6 7 8 9 10 11)))
            (union-at-n l k '(9 10 11)))
   ((enable b3a)
    (use (un5-11-then-un5-12) (k-in-l5-11-g4-then-l9-11))))

(prove-lemma  b3a-k-in-l9-11 (rewrite)
   (implies (and (molws n l g h)                    
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b1a l i k)
                 (b3a l g i k)
                 (at l i 12)
                 (union-at-n lp k '(5 6 7 8 9 10 11 12)))
            (union-at-n l k '(9 10 11)))
   ((enable b1a)
    (use (lm-b3a-k-in-l9-11) (l12-then-un8-12) (m-k-in-l5-11))))

(prove-lemma  m-k-in-lp9-12 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (union-at-n l k '(9 10 11)))
            (union-at-n lp k '(9 10 11 12)))
   ((enable union-at-n at mrhoi)))

(prove-lemma lm-b3a-i-neq-k-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (lg n lp gp)
                 (b1a l i k)
                 (b3a l g i k)
                 (at l i 12)
                 (union-at-n lp k '(5 6 7 8 9 10 11 12)))
            (at gp k 4))
   ((disable mrho-preserves-lg)
    (use (b3a-k-in-l9-11) (m-k-in-lp9-12))))

(prove-lemma b3a-i-neq-k-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (lg n l g)
                 (b1a l i k)
                 (b3a l g i k))
            (b3a lp gp i k))
    ((enable b3a)
     (use (lm-b3a-i-neq-k-j-eq-k))))

;* i-eq-k-j-neq-k
(prove-lemma cond-lp12 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (member j (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at lp k 12)
                 (at l k 11))
            (lessp j (nth h k)))
   ((enable mrhoi at)))

(prove-lemma b3a-j-in-l5-12 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b3b l g h k j)
                 (at l k 11)
                 (at lp k 12)
                 (union-at-n l j '(5 6 7 8 9 10 11 12)))
            (at g j 4))
   ((enable b3b) (use (cond-lp12))))

(prove-lemma m-k-in-l11 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at lp k 12))
            (at l k 11))
    ((enable mrhoi at)))

(prove-lemma lm-b3a-i-eq-k-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (lg n l g)
                 (b3b l g h k j)
                 (at lp k 12)
                 (union-at-n lp j '(5 6 7 8 9 10 11 12)))
            (at g j 4))
   ((use (b3a-j-in-l5-12) (m-k-in-l11))))

(prove-lemma b3a-i-eq-k-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (lg n l g)
                 (b3b l g h k j))
            (b3a lp gp k j))
    ((enable b3a) (use (lm-b3a-i-eq-k-j-neq-k))))

;* i-j-neq-k

(prove-lemma b3a-i-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (not (equal j k))
                 (b3a l g i j))
            (b3a lp gp i j))
   ((enable b3a)))

(prove-lemma b3a-i-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (lg n l g)
                 (b1a l i j)
                 (b3a l g i j))
            (b3a lp gp i j))
   ((use (b3a-i-j-neq-k) (b3a-i-neq-k-j-eq-k))))

;* i-j-eq-k

(prove-lemma b3a-i-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b3a l g k k)
                 (b3b l g h k k))
            (b3a lp gp k k))
   ((enable b3a)
    (use (if4 (j k) (l lp) (g gp)))))

(prove-lemma b3a-i-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b3a l g k j)
                 (b3b l g h k j))
            (b3a lp gp k j))
   ((use (b3a-i-eq-k-j-neq-k) (b3a-i-j-eq-k))))

(prove-lemma mrho-preserves-b3a ()
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b1a l i j)
                 (b3a l g i j)
                 (b3b l g h i j))
            (b3a lp gp i j))
   ((use (b3a-i-neq-k) (b3a-i-eq-k))))


;;;;;;;;;;;;;   b3b   ;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;common in atom and mole.
(prove-lemma l10-then-un10-12 (rewrite)
   (implies (at l k 10)
            (union-at-n l k '(10 11 12)))
   ((enable at union-at-n)))

(prove-lemma l11-then-un9-12 (rewrite)
   (implies (at lp k 11)
            (union-at-n lp k '(9 10 11 12)))
   ((enable union-at-n at)))

(prove-lemma l11-then-un8-12 (rewrite)
   (implies (at l i 11)
            (union-at-n l i '(8 9 10 11 12)))
   ((enable union-at-n at)))
;;;;;;;;;;;;;;common in atom and mole end.

;* i-neq-k-j-eq-k

(prove-lemma  lm-b3b-k-in-l9-11 (rewrite)                
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b3b l g h i k)
                 (at l i 11)
                 (lessp k (nth h i))
                 (union-at-n l k '(5 6 7 8 9 10 11)))
            (union-at-n l k '(9 10 11)))
   ((enable b3b)
    (use (un5-11-then-un5-12))))

(prove-lemma  b3b-k-in-l9-11 (rewrite)
   (implies (and (molws n l g h)                    
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b1a l i k)
                 (b3b l g h i k)
                 (lg n l g)
                 (at l i 11)
                 (lessp k (nth h i))
                 (union-at-n lp k '(5 6 7 8 9 10 11 12)))
            (union-at-n l k '(9 10 11)))
   ((enable b1a)
    (use (lm-b3b-k-in-l9-11) (l11-then-un8-12) (m-k-in-l5-11))))

(prove-lemma lm-b3b-i-neq-k-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (lg n lp gp)
                 (b1a l i k)
                 (b3b l g h i k)
                 (at l i 11)
                 (lessp k (nth h i))
                 (union-at-n lp k '(5 6 7 8 9 10 11 12)))
            (at gp k 4))
   ((disable mrho-preserves-lg)
    (use (b3b-k-in-l9-11) (m-k-in-lp9-12))))

(prove-lemma b3b-i-neq-k-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (lg n l g)
                 (b1a l i k)
                 (b3b l g h i k))
            (b3b lp gp hp i k))
    ((enable b3b)
     (use (lm-b3b-i-neq-k-j-eq-k))))

;* i-eq-k-j-neq-k

(prove-lemma j-in-g4 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at h k j)
                 (not (union-at-n g (nth h k) '(2 3)))
                 (union-at-n l j '(5 6 7 8 9 10 11 12)))
            (at g j 4))
   ((enable at)
    (use (if4) (l5-12-eq-l5-8-or-l9-12) (if3))))

(prove-lemma l11-g14 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at h k j)
                 (at l k 11)
                 (at lp k 11))
            (not (union-at-n g (nth h k) '(2 3))))
   ((enable mrhoi at)))

(prove-lemma l11-nth-h-k-eq-j (rewrite)
   (implies (and (at h k j)
                 (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (at l k 11)
                 (at lp k 11)
                 (union-at-n l j '(5 6 7 8 9 10 11 12)))
            (at g j 4))
   ((use (l11-g14) (j-in-g4))))

(prove-lemma lm-j-in-l5-12 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b3b l g h k j)
                 (at l k 11)
                 (at lp k 11)
                 (lessp (sub1 j) (nth h k))
                 (union-at-n l j '(5 6 7 8 9 10 11 12)))
            (at g j 4))
   ((enable b3b)
    (use (nth-k-lt-j-or-eq-j))))

(prove-lemma  cond-l11 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at l k 11)
                 (lessp j (nth hp k)))
            (lessp (sub1 j) (nth h k)))
   ((enable mrhoi at)))

(prove-lemma j-in-l5-12 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (lg n l g)
                 (b3b l g h k j)
                 (at l k 11)
                 (at lp k 11)
                 (lessp j (nth hp k))
                 (union-at-n l j '(5 6 7 8 9 10 11 12)))
            (at g j 4))
   ((use (lm-j-in-l5-12) (cond-l11))))

(prove-lemma j-leq-add1k-then-k-not-in-l10 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (member j (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (b2a l k j)
                 (union-at-n l j '(5 6 7 8 9 10 11 12))
                 (not (equal j k))
                 (lessp j (add1 k)))
            (not (at l k 10)))
   ((enable b2a) (use (l10-then-un10-12))))

(prove-lemma not-j-leq-add1k-then-k-not-in-l10 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (member j (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at lp k 11)
                 (lessp j (nth hp k))
                 (not (lessp j (add1 k))))
            (not (at l k 10)))
   ((enable mrhoi at)))

;;;The order of (member k (nset n)) and 
;;;(member j (nset n)) are switched deliberately.
(prove-lemma k-not-in-l10 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (member j (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (b2a l k j)
                 (union-at-n l j '(5 6 7 8 9 10 11 12))
                 (at lp k 11)
                 (lessp j (nth hp k)))
            (not (at l k 10)))
   ((use (not-j-leq-add1k-then-k-not-in-l10))))

(prove-lemma lp11-then-l11-or-l10 (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (at lp k 11)
                 (not (at l k 10)))
            (at l k 11))
   ((enable mrhoi at)))

;;;When the order of (member j (nset n)) and 
;;;(member k (nset n)) is switched, the order of
;;;hints must be switched, in order to make the proof 
;;;successful.
(prove-lemma b3b-k-in-l11 (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (b2a l k j)
                 (union-at-n l j '(5 6 7 8 9 10 11 12))
                 (at lp k 11)
                 (lessp j (nth hp k)))
            (at l k 11))
   ((use (k-not-in-l10))))

;;;When the order of (member j (nset n)) and 
;;;(member k (nset n)) is switched then the order of
;;;hints must be switched in order to make the proof 
;;;successful.
(prove-lemma lm-b3b-i-eq-k-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (lg n l g)
                 (b2a l k j)
                 (b3b l g h k j)
                 (at lp k 11)
                 (lessp j (nth hp k))
                 (union-at-n l j '(5 6 7 8 9 10 11 12)))
            (at g j 4))
   ((use (b3b-k-in-l11) (j-in-l5-12))))

(prove-lemma b3b-i-eq-k-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal j k))
                 (lg n l g)
                 (b3b l g h k j)
                 (b2a l k j))
            (b3b lp gp hp k j))
    ((enable b3b) (use (lm-b3b-i-eq-k-j-neq-k))))

(prove-lemma b3b-i-j-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (not (equal j k))
                 (b3b l g h i j))
            (b3b lp gp hp i j))
   ((enable b3b)))

(prove-lemma b3b-i-neq-k (rewrite)
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (not (equal i k))
                 (lg n l g)
                 (b1a l i j)
                 (b3b l g h i j))
            (b3b lp gp hp i j))
   ((use (b3b-i-j-neq-k) (b3b-i-neq-k-j-eq-k))))

(prove-lemma b3b-i-j-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b3b l g h k k))
            (b3b lp gp hp k k))
   ((enable b3b)
    (use (if4 (j k) (l lp) (g gp)) (l11-then-un9-12))))

(prove-lemma b3b-i-eq-k (rewrite)
   (implies (and (molws n l g h)
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b1a l k j)
                 (b3b l g h k j)
                 (b2a l k j))
            (b3b lp gp hp k j))
   ((use (b3b-i-eq-k-j-neq-k) (b3b-i-j-eq-k))))

(prove-lemma mrho-preserves-b3b ()
   (implies (and (molws n l g h)
                 (member i (nset n))
                 (member j (nset n))
                 (member k (nset n))
                 (mrhoi n k l g h lp gp hp)
                 (lg n l g)
                 (b1a l i j)
                 (b3b l g h i j)
                 (b2a l i j))
            (b3b lp gp hp i j))
   ((use (b3b-i-neq-k) (b3b-i-eq-k))))

